<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Introduction on Open channel</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Introduction on Open channel</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Spectrum Analysis</title>
      <link>http://localhost:1313/posts/spectrum-analysis/</link>
      <pubDate>Thu, 01 Feb 2024 11:44:42 +0800</pubDate>
      <guid>http://localhost:1313/posts/spectrum-analysis/</guid>
      <description>&lt;h1 id=&#34;写在前面&#34;&gt;&#xA;  写在前面&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%86%99%e5%9c%a8%e5%89%8d%e9%9d%a2&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;手册一般分为操作手册和原理手册，一般将前者称为指南，后者对应地称为指北。教科书往往兼顾两者，但是更加偏向原理讲解，绕了一大圈才道出问题的解决方法。在互联网论坛中存在一类“TL;DR”文化，即文本“Too long; Don&amp;rsquo;t read”，因此发帖人往往将操作讲解放在开头方便浏览者迅速找到问题的解决办法。&lt;/p&gt;&#xA;&lt;p&gt;时间序列谱分析可以很复杂，先数学后物理再编程；也可以很简单，五六行代码便得到结果。本节是TL;DR的版本。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rng default&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;% Sample rate 1000Hz&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Fs = &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;; t = &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Fs:&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;% A signal with 200Hz cosine and 100Hz sine and noise&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x = cos(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;pi&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;t&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; randn(size(t));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[pxx, f] = pwelch(x, [], [], [], Fs);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(f, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;log10(pxx))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xlabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Frequency (Hz)&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ylabel(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;PSD (dB/Hz)&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;legend(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Pxx by welch&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;随机过程&#34;&gt;&#xA;  随机过程&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e9%9a%8f%e6%9c%ba%e8%bf%87%e7%a8%8b&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 id=&#34;定义&#34;&gt;&#xA;  定义&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%ae%9a%e4%b9%89&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;流场分析采用雷诺分解瞬时流速$u(t)$为时均流速$U=\left\langle u\right\rangle$和脉动流速$u&#39;(t)$，即&#xA;$$u(t)=\left\langle u \right\rangle+u&#39;(t).$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>D latch</title>
      <link>http://localhost:1313/docs/page-one/</link>
      <pubDate>Wed, 14 Jun 2023 14:07:00 +0800</pubDate>
      <guid>http://localhost:1313/docs/page-one/</guid>
      <description>&lt;ul&gt;&#xA;&lt;li&gt;S = 1, R = 0: Set&lt;/li&gt;&#xA;&lt;li&gt;S = 0, R = 0: Hold&lt;/li&gt;&#xA;&lt;li&gt;S = 0, R = 1: Reset&lt;/li&gt;&#xA;&lt;li&gt;S = 1, R = 1: Not allowed&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;$$&#xA;\begin{aligned}&#xA;\sum_{n=1}^{\infty} a_n z^n &amp;amp;=  \sum_{n=1}^{\infty} a_n z^n\\&#xA;&amp;amp;= \sum_{k=0}^{\infty} c_k (x-a)^k&#xA;.\end{aligned}&#xA;$$&lt;/p&gt;</description>
    </item>
    <item>
      <title>春天下午我总感到悲伤</title>
      <link>http://localhost:1313/posts/nonsense/</link>
      <pubDate>Mon, 22 May 2023 13:17:37 +0800</pubDate>
      <guid>http://localhost:1313/posts/nonsense/</guid>
      <description>&lt;p&gt;春天下午，天气好得人心慌，做什么或不做什么都是虚度。&lt;/p&gt;&#xA;&lt;p&gt;白昼还没长到足以浪费，而黄昏又迟迟不结束。&lt;/p&gt;&#xA;&lt;p&gt;站在玉兰和山茶之间，&lt;/p&gt;&#xA;&lt;p&gt;玉兰像白鸟的羽翼、怒放的雪，茶花在太阳下闪着光辉。&lt;/p&gt;&#xA;&lt;p&gt;人迷恋声色犬马，只是为了忘记时间在流逝……&lt;/p&gt;&#xA;&lt;p&gt;人用意义来对抗死，&lt;/p&gt;&#xA;&lt;p&gt;而春天没有意义。&lt;/p&gt;&#xA;&lt;p&gt;春天下午我总感到悲伤。&lt;/p&gt;</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Mon, 10 Apr 2023 12:28:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>&lt;p&gt;😀&lt;strong&gt;Hello world&lt;/strong&gt;!&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/mergePSD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/mergePSD/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/mergePSD.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt;  1 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%{&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt;  2 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;mergePSD.m - A MATLAB script for merging and aligning power spectral density (PSD) data from two datasets.&lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt;  3 &lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt;  4 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;It demonstrates how to:&lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt;  5 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;1. Load and process PSD data from two sources.&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt;  6 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;2. Align datasets based on their Y-axis values.&lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt;  7 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;3. Merge low-frequency and high-frequency data into a single dataset.&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt;  8 &lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt;  9 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;Key Features:&lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt; 10 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- Handles datasets with different lengths by finding the best alignment offset.&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt; 11 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- Slices and merges data based on a specified frequency cutoff.&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt; 12 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- Combines data while preserving the integrity of the frequency and PSD values.&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt; 13 &lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt; 14 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;Functions:&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt; 15 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;1. mergeAlighment:&lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt; 16 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Aligns and merges two datasets (low-frequency and high-frequency).&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt; 17 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Slices data based on a frequency cutoff and aligns them in the Y direction.&lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt; 18 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Outputs merged frequency, PSD, and Y-axis data.&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt; 19 &lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt; 20 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;Inputs:&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt; 21 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- Two datasets containing frequency (`f`), PSD (`pxx`), and Y-axis (`Y`) values.&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt; 22 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- A frequency cutoff (`cut_f`) to separate low and high-frequency data.&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt; 23 &lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt; 24 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;Outputs:&lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt; 25 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- Merged frequency (`f_merge`), PSD (`pxx_merge`), and Y-axis (`Y_merge`) data.&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt; 26 &lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt; 27 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;Usage:&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt; 28 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- This script is useful for combining PSD data from different measurement ranges or resolutions.&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt; 29 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;- It can be adapted for other types of data alignment and merging tasks.&lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt; 30 &lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt; 31 &lt;/span&gt;Note:&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt; 32 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Ensure the input data files (`pxxs.mat`) contain the required variables (`pxxs`, `fs`, `Y`).&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt; 33 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; The script assumes the datasets are stored in specific directories (`C&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;figure_data` and `L&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;figure_data`).&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt; 34 &lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt; 35 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%}&lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt; 36 &lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt; 37 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt; 38 &lt;/span&gt;data_c = load(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;C/figure_data/pxxs.mat&amp;quot;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt; 39 &lt;/span&gt;data_l = load(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;L/figure_data/pxxs.mat&amp;quot;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt; 40 &lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt; 41 &lt;/span&gt;pxx_c = data_c.pxxs&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; f_c = data_c.fs&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt; 42 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Find the middle index of the data&lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt; 43 &lt;/span&gt;mid_c = &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(pxx_c, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt; 44 &lt;/span&gt;pxx_c = squeeze(pxx_c(:, mid_c, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt; 45 &lt;/span&gt;f_c = squeeze(f_c(:, mid_c, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt; 46 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Remove high frequency white noise data&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt; 47 &lt;/span&gt;out_f = &lt;span class=&#34;Constant&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% cut edge of frequency&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt; 48 &lt;/span&gt;out_index = f_c(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;, :) &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; out_f&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt; 49 &lt;/span&gt;f_c(:, out_index) = &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt; 50 &lt;/span&gt;pxx_c(:, out_index) = &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt; 51 &lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt; 52 &lt;/span&gt;pxx_l = data_l.pxxs&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; f_l = data_l.fs&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt; 53 &lt;/span&gt;mid_l = &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(pxx_l, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt; 54 &lt;/span&gt;pxx_l = squeeze(pxx_l(:, mid_l, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt; 55 &lt;/span&gt;f_l = squeeze(f_l(:, mid_l, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt; 56 &lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt; 57 &lt;/span&gt;cut_f = &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% cut edge of merged frequency&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt; 58 &lt;/span&gt;index_c = (f_c &lt;span class=&#34;Statement&#34;&gt;&amp;gt;=&lt;/span&gt; cut_f)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt; 59 &lt;/span&gt;index_l = (f_l &lt;span class=&#34;Statement&#34;&gt;&amp;lt;=&lt;/span&gt; cut_f)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt; 60 &lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt; 61 &lt;/span&gt;Y_c = data_c.Y&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt; 62 &lt;/span&gt;Y_l = data_l.Y&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt; 63 &lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt; 64 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Align datasets based on Y-axis values&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt; 65 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; length(Y_l) &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; length(Y_c)&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt; 66 &lt;/span&gt;    longer = Y_l&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt; 67 &lt;/span&gt;    shorter = Y_c&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt; 68 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;else&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt; 69 &lt;/span&gt;    longer = Y_c&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt; 70 &lt;/span&gt;    shorter = Y_l&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt; 71 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt; 72 &lt;/span&gt;best_offset = &lt;span class=&#34;Constant&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt; 73 &lt;/span&gt;min_diff = inf&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt; 74 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; offset = &lt;span class=&#34;Constant&#34;&gt;0&lt;/span&gt;:(length(longer) &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; length(shorter))&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt; 75 &lt;/span&gt;    current_diff = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;abs&lt;/span&gt;(longer(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;offset:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(shorter)) &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; shorter))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt; 76 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; current_diff &lt;span class=&#34;Statement&#34;&gt;&amp;lt;&lt;/span&gt; min_diff&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt; 77 &lt;/span&gt;        best_offset = offset&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt; 78 &lt;/span&gt;        min_diff = current_diff&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt; 79 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt; 80 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt; 81 &lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt; 82 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; length(Y_l) &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; length(Y_c)&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt; 83 &lt;/span&gt;    &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_merge, pxx_merge, Y_merge&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = mergeAlighment({f_l, pxx_l, Y_l}, {f_c, pxx_c, Y_c}, cut_f, best_offset)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt; 84 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;else&lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt; 85 &lt;/span&gt;    &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_merge, pxx_merge, Y_merge&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = mergeAlighment({f_c, pxx_c, Y_c}, {f_l, pxx_l, Y_l}, cut_f, best_offset)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt; 86 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt; 87 &lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt; 88 &lt;/span&gt;save(&lt;span class=&#34;Constant&#34;&gt;&#39;merged_pxx.mat&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;f_merge&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;pxx_merge&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Y_merge&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L89&#34; class=&#34;LineNr&#34;&gt; 89 &lt;/span&gt;&#xA;&lt;span id=&#34;L90&#34; class=&#34;LineNr&#34;&gt; 90 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_merge, pxx_merge, Y_merge&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = mergeAlighment(longer, shorter, cut_f, offset)&#xA;&lt;span id=&#34;L91&#34; class=&#34;LineNr&#34;&gt; 91 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(longer{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;}, &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(shorter{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;}, &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;all&amp;quot;&lt;/span&gt;)&#xA;&lt;span id=&#34;L92&#34; class=&#34;LineNr&#34;&gt; 92 &lt;/span&gt;        low_freq_data = longer&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L93&#34; class=&#34;LineNr&#34;&gt; 93 &lt;/span&gt;        high_freq_data = shorter&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L94&#34; class=&#34;LineNr&#34;&gt; 94 &lt;/span&gt;        &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_l, pxx_l, Y_l&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = low_freq_data{:}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L95&#34; class=&#34;LineNr&#34;&gt; 95 &lt;/span&gt;        &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_c, pxx_c, Y_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = high_freq_data{:}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L96&#34; class=&#34;LineNr&#34;&gt; 96 &lt;/span&gt;        &lt;span class=&#34;Comment&#34;&gt;% Slice low frequency data to align with high frequency data in Y direction&lt;/span&gt;&#xA;&lt;span id=&#34;L97&#34; class=&#34;LineNr&#34;&gt; 97 &lt;/span&gt;        pxx_l = pxx_l(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_c), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L98&#34; class=&#34;LineNr&#34;&gt; 98 &lt;/span&gt;        f_l = f_l(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_c), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L99&#34; class=&#34;LineNr&#34;&gt; 99 &lt;/span&gt;        Y_l = Y_l(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_c), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L100&#34; class=&#34;LineNr&#34;&gt;100 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;else&lt;/span&gt;&#xA;&lt;span id=&#34;L101&#34; class=&#34;LineNr&#34;&gt;101 &lt;/span&gt;        low_freq_data = shorter&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L102&#34; class=&#34;LineNr&#34;&gt;102 &lt;/span&gt;        high_freq_data = longer&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L103&#34; class=&#34;LineNr&#34;&gt;103 &lt;/span&gt;        &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_l, pxx_l, Y_l&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = low_freq_data{:}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L104&#34; class=&#34;LineNr&#34;&gt;104 &lt;/span&gt;        &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_c, pxx_c, Y_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = high_freq_data{:}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L105&#34; class=&#34;LineNr&#34;&gt;105 &lt;/span&gt;        &lt;span class=&#34;Comment&#34;&gt;% Slice high frequency data to align with low frequency data in Y direction&lt;/span&gt;&#xA;&lt;span id=&#34;L106&#34; class=&#34;LineNr&#34;&gt;106 &lt;/span&gt;        pxx_c = pxx_c(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_l), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L107&#34; class=&#34;LineNr&#34;&gt;107 &lt;/span&gt;        f_c = f_c(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_l), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L108&#34; class=&#34;LineNr&#34;&gt;108 &lt;/span&gt;        Y_c = Y_c(offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:offset&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;length(Y_l), :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L109&#34; class=&#34;LineNr&#34;&gt;109 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L110&#34; class=&#34;LineNr&#34;&gt;110 &lt;/span&gt;    Y_merge = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;Y_l, Y_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L111&#34; class=&#34;LineNr&#34;&gt;111 &lt;/span&gt;&#xA;&lt;span id=&#34;L112&#34; class=&#34;LineNr&#34;&gt;112 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Preallocate memory for f_merge and pxx_merge&lt;/span&gt;&#xA;&lt;span id=&#34;L113&#34; class=&#34;LineNr&#34;&gt;113 &lt;/span&gt;    max_columns = &lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(f_l, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(f_c, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Maximum possible columns&lt;/span&gt;&#xA;&lt;span id=&#34;L114&#34; class=&#34;LineNr&#34;&gt;114 &lt;/span&gt;    f_merge = &lt;span class=&#34;Statement&#34;&gt;zeros&lt;/span&gt;(length(Y_merge), max_columns)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L115&#34; class=&#34;LineNr&#34;&gt;115 &lt;/span&gt;    pxx_merge = &lt;span class=&#34;Statement&#34;&gt;zeros&lt;/span&gt;(length(Y_merge), max_columns)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L116&#34; class=&#34;LineNr&#34;&gt;116 &lt;/span&gt;&#xA;&lt;span id=&#34;L117&#34; class=&#34;LineNr&#34;&gt;117 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Slice low frequency data based on cut_f&lt;/span&gt;&#xA;&lt;span id=&#34;L118&#34; class=&#34;LineNr&#34;&gt;118 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; ii = &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(Y_merge)&#xA;&lt;span id=&#34;L119&#34; class=&#34;LineNr&#34;&gt;119 &lt;/span&gt;        index_l = (f_l(ii, :) &lt;span class=&#34;Statement&#34;&gt;&amp;lt;=&lt;/span&gt; cut_f)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L120&#34; class=&#34;LineNr&#34;&gt;120 &lt;/span&gt;        index_c = (f_c(ii, :) &lt;span class=&#34;Statement&#34;&gt;&amp;gt;=&lt;/span&gt; cut_f)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L121&#34; class=&#34;LineNr&#34;&gt;121 &lt;/span&gt;        merged_f = &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;f_l(ii, index_l) f_c(ii, index_c)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L122&#34; class=&#34;LineNr&#34;&gt;122 &lt;/span&gt;        merged_pxx = &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;pxx_l(ii, index_l) pxx_c(ii, index_c)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L123&#34; class=&#34;LineNr&#34;&gt;123 &lt;/span&gt;        assert(length(merged_f) &lt;span class=&#34;Statement&#34;&gt;==&lt;/span&gt; length(merged_pxx), &lt;span class=&#34;Constant&#34;&gt;&amp;quot;Length mismatch between frequency and PSD data.&amp;quot;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L124&#34; class=&#34;LineNr&#34;&gt;124 &lt;/span&gt;&#xA;&lt;span id=&#34;L125&#34; class=&#34;LineNr&#34;&gt;125 &lt;/span&gt;        &lt;span class=&#34;Comment&#34;&gt;% Store merged data&lt;/span&gt;&#xA;&lt;span id=&#34;L126&#34; class=&#34;LineNr&#34;&gt;126 &lt;/span&gt;        f_merge(ii, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(merged_f)) = merged_f&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L127&#34; class=&#34;LineNr&#34;&gt;127 &lt;/span&gt;        pxx_merge(ii, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(merged_pxx)) = merged_pxx&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L128&#34; class=&#34;LineNr&#34;&gt;128 &lt;/span&gt;        plot(f_c(ii, :), pxx_c(ii, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L129&#34; class=&#34;LineNr&#34;&gt;129 &lt;/span&gt;        hold on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L130&#34; class=&#34;LineNr&#34;&gt;130 &lt;/span&gt;        plot(f_l(ii, :), pxx_l(ii, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L131&#34; class=&#34;LineNr&#34;&gt;131 &lt;/span&gt;        plot(merged_f, merged_pxx)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L132&#34; class=&#34;LineNr&#34;&gt;132 &lt;/span&gt;        set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; hold off&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L133&#34; class=&#34;LineNr&#34;&gt;133 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L134&#34; class=&#34;LineNr&#34;&gt;134 &lt;/span&gt;&#xA;&lt;span id=&#34;L135&#34; class=&#34;LineNr&#34;&gt;135 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Trim unused columns&lt;/span&gt;&#xA;&lt;span id=&#34;L136&#34; class=&#34;LineNr&#34;&gt;136 &lt;/span&gt;    f_merge = f_merge(:, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(merged_f))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L137&#34; class=&#34;LineNr&#34;&gt;137 &lt;/span&gt;    pxx_merge = pxx_merge(:, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(merged_pxx))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L138&#34; class=&#34;LineNr&#34;&gt;138 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/mergePxxPlot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/mergePxxPlot/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/mergePxxPlot.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;.Todo { color: #0000ff; background-color: #ffff00; padding-bottom: 1px; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt;  1 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%{&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt;  2 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;mergePxxPlot.m&lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt;  3 &lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt;  4 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;This script processes and visualizes pre-multiplied power spectral density (PSD) data &lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt;  5 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;from a merged dataset. The script performs the following tasks:&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt;  6 &lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt;  7 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;1. **Load Data**:&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt;  8 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Loads the merged PSD data from a `.mat` file (`merged_pxx.mat`).&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt;  9 &lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt; 10 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;2. **Preprocess Data**:&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt; 11 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Extracts frequency (`f_merge`), vertical positions (`Y_merge`), and PSD values (`pxx_merge`).&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt; 12 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Computes pre-multiplied PSD values (`f * S_uu(f)`).&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt; 13 &lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt; 14 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;3. **Generate Individual PSD Plots**:&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt; 15 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Creates and saves individual PSD plots for each vertical position (`z`).&lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt; 16 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Saves the plots in a specified output folder (`mergePSD-figure`) as `.png` files.&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt; 17 &lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt; 18 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;4. **Generate Combined PSD Plot**:&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt; 19 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Selects specific vertical positions (`z`) for visualization.&lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt; 20 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Normalizes the selected `z` values for color mapping.&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt; 21 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Plots the selected PSD data with a color gradient based on vertical position.&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt; 22 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Adds a colorbar to indicate the mapping of colors to `z` values.&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt; 23 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Saves the combined plot as `.fig`, `.emf`, and high-resolution `.jpg` files.&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt; 24 &lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt; 25 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;5. **Interpolate Data**:&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt; 26 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Interpolates the PSD data onto a finer grid for contour plotting.&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt; 27 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;    - Uses logarithmic spacing for frequency (`f`) and linear spacing for vertical positions (`z`).&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt; 28 &lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt; 29 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;6. **Generate Contour Plot**:&lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt; 30 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Creates a filled contour plot of the interpolated PSD data.&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt; 31 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Configures axes, labels, and colorbar with LaTeX formatting.&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt; 32 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Uses a custom colormap (`sky`) &lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; visualization.&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt; 33 &lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt; 34 &lt;/span&gt;Dependencies:&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt; 35 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Requires the `merged_pxx.mat` file containing the following variables:&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt; 36 &lt;/span&gt;  &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; `f_merge`: Frequency data (Hz).&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt; 37 &lt;/span&gt;  &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; `Y_merge`: Vertical positions (m).&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt; 38 &lt;/span&gt;  &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; `pxx_merge`: PSD values.&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt; 39 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Requires the `sky` colormap &lt;span class=&#34;Identifier&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; custom color mapping.&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt; 40 &lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt; 41 &lt;/span&gt;Output:&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt; 42 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Individual PSD plots saved in the `mergePSD&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt;figure` folder.&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt; 43 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Combined PSD plot saved as `.fig`, `.emf`, and `.jpg` files.&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt; 44 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Contour plot displayed with interpolated PSD data.&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt; 45 &lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt; 46 &lt;/span&gt;Notes:&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt; 47 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; Ensure the `merged_pxx.mat` file is in the same directory as the script or provide the correct path.&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt; 48 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; The `sky` colormap &lt;span class=&#34;Identifier&#34;&gt;function&lt;/span&gt; must be available in the MATLAB path.&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt; 49 &lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt; 50 &lt;/span&gt;Author: L&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt;N1988&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt; 51 &lt;/span&gt;Date: &lt;span class=&#34;Constant&#34;&gt;2025&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;30&lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt; 52 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%}&lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt; 53 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt; 54 &lt;/span&gt;mergeData = load(&lt;span class=&#34;Constant&#34;&gt;&#39;merged_pxx.mat&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt; 55 &lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt; 56 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Measuring points along vertical centre line&lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt; 57 &lt;/span&gt;xv = mergeData.f_merge&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt; 58 &lt;/span&gt;yv = repmat(double(mergeData.Y_merge), &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(xv, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt; 59 &lt;/span&gt;vv = xv &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; mergeData.pxx_merge&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% pre-PSD&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt; 60 &lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt; 61 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot and save the merged PSD&lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt; 62 &lt;/span&gt;outputFolder = &lt;span class=&#34;Constant&#34;&gt;&#39;mergePSD-figure&#39;&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt; 63 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;exist(outputFolder, &lt;span class=&#34;Constant&#34;&gt;&#39;dir&#39;&lt;/span&gt;)&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt; 64 &lt;/span&gt;    mkdir(outputFolder)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt; 65 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt; 66 &lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt; 67 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; ii = &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(mergeData.Y_merge)&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt; 68 &lt;/span&gt;    figure&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt; 69 &lt;/span&gt;    plot(xv(ii, :), vv(ii, :), &lt;span class=&#34;Constant&#34;&gt;&#39;LineWidth&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt; 70 &lt;/span&gt;    set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt; 71 &lt;/span&gt;    set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt; 72 &lt;/span&gt;    set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt; 73 &lt;/span&gt;    set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$fS_{uu}(f) (\rm m^2/s^2)$&amp;quot;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt; 74 &lt;/span&gt;    set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;PSD at $z = %.3f$ m&amp;quot;&lt;/span&gt;, mergeData.Y_merge(ii))), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt; 75 &lt;/span&gt;    saveas(gcf, fullfile(outputFolder, sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;merged_psd_z%.3f.png&amp;quot;&lt;/span&gt;, mergeData.Y_merge(ii))))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt; 76 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt; 77 &lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt; 78 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%%&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt; 79 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Create a single figure&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt; 80 &lt;/span&gt;figure&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt; 81 &lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt; 82 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define the indices for the five data series&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt; 83 &lt;/span&gt;indices = &lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;:&lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;:length(mergeData.Y_merge)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Select every 5th index&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt; 84 &lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt; 85 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Extract the corresponding z values for these indices&lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt; 86 &lt;/span&gt;z_values = mergeData.Y_merge(indices)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Vertical positions for the selected indices&lt;/span&gt;&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt; 87 &lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt; 88 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Normalize the selected z values to [0, 1] for color mapping&lt;/span&gt;&#xA;&lt;span id=&#34;L89&#34; class=&#34;LineNr&#34;&gt; 89 &lt;/span&gt;z_min = &lt;span class=&#34;Statement&#34;&gt;min&lt;/span&gt;(z_values)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L90&#34; class=&#34;LineNr&#34;&gt; 90 &lt;/span&gt;z_max = &lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(z_values)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L91&#34; class=&#34;LineNr&#34;&gt; 91 &lt;/span&gt;z_normalized = (z_values &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; z_min) &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; (z_max &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; z_min)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Normalize to [0, 1]&lt;/span&gt;&#xA;&lt;span id=&#34;L92&#34; class=&#34;LineNr&#34;&gt; 92 &lt;/span&gt;&#xA;&lt;span id=&#34;L93&#34; class=&#34;LineNr&#34;&gt; 93 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define a colormap (e.g., &#39;jet&#39;) for the five selected series&lt;/span&gt;&#xA;&lt;span id=&#34;L94&#34; class=&#34;LineNr&#34;&gt; 94 &lt;/span&gt;cmap = sky(length(indices))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Colormap with 5 colors (one for each selected series)&lt;/span&gt;&#xA;&lt;span id=&#34;L95&#34; class=&#34;LineNr&#34;&gt; 95 &lt;/span&gt;&#xA;&lt;span id=&#34;L96&#34; class=&#34;LineNr&#34;&gt; 96 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot the selected data series with a color gradient&lt;/span&gt;&#xA;&lt;span id=&#34;L97&#34; class=&#34;LineNr&#34;&gt; 97 &lt;/span&gt;hold on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L98&#34; class=&#34;LineNr&#34;&gt; 98 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; idx = &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:length(indices)&#xA;&lt;span id=&#34;L99&#34; class=&#34;LineNr&#34;&gt; 99 &lt;/span&gt;    ii = indices(idx)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Get the actual index&lt;/span&gt;&#xA;&lt;span id=&#34;L100&#34; class=&#34;LineNr&#34;&gt;100 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Get the color for this vertical position&lt;/span&gt;&#xA;&lt;span id=&#34;L101&#34; class=&#34;LineNr&#34;&gt;101 &lt;/span&gt;    color_idx = &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(z_normalized(idx) &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; (&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(cmap, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)) &lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Map to colormap index&lt;/span&gt;&#xA;&lt;span id=&#34;L102&#34; class=&#34;LineNr&#34;&gt;102 &lt;/span&gt;    plot(xv(ii, :), vv(ii, :), &lt;span class=&#34;Constant&#34;&gt;&#39;LineWidth&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1.5&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Color&#39;&lt;/span&gt;, cmap(color_idx, :))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L103&#34; class=&#34;LineNr&#34;&gt;103 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L104&#34; class=&#34;LineNr&#34;&gt;104 &lt;/span&gt;hold off&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L105&#34; class=&#34;LineNr&#34;&gt;105 &lt;/span&gt;&#xA;&lt;span id=&#34;L106&#34; class=&#34;LineNr&#34;&gt;106 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Set the axes properties&lt;/span&gt;&#xA;&lt;span id=&#34;L107&#34; class=&#34;LineNr&#34;&gt;107 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L108&#34; class=&#34;LineNr&#34;&gt;108 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L109&#34; class=&#34;LineNr&#34;&gt;109 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L110&#34; class=&#34;LineNr&#34;&gt;110 &lt;/span&gt;&#xA;&lt;span id=&#34;L111&#34; class=&#34;LineNr&#34;&gt;111 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Set labels and title with LaTeX interpreter&lt;/span&gt;&#xA;&lt;span id=&#34;L112&#34; class=&#34;LineNr&#34;&gt;112 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&#39;$f$ (Hz)&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L113&#34; class=&#34;LineNr&#34;&gt;113 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&#39;$fS_{uu}(f) (\rm m^2/s^2)$&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L114&#34; class=&#34;LineNr&#34;&gt;114 &lt;/span&gt;set(title(&lt;span class=&#34;Constant&#34;&gt;&#39;Pre-multiplied Power Spectral Density&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L115&#34; class=&#34;LineNr&#34;&gt;115 &lt;/span&gt;&#xA;&lt;span id=&#34;L116&#34; class=&#34;LineNr&#34;&gt;116 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Add a colorbar to show the mapping of colors to z values&lt;/span&gt;&#xA;&lt;span id=&#34;L117&#34; class=&#34;LineNr&#34;&gt;117 &lt;/span&gt;colormap(cmap)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L118&#34; class=&#34;LineNr&#34;&gt;118 &lt;/span&gt;cbar = colorbar&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L119&#34; class=&#34;LineNr&#34;&gt;119 &lt;/span&gt;set(cbar, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L120&#34; class=&#34;LineNr&#34;&gt;120 &lt;/span&gt;set(get(cbar, &lt;span class=&#34;Constant&#34;&gt;&#39;Label&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;String&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;$z$ (m)&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L121&#34; class=&#34;LineNr&#34;&gt;121 &lt;/span&gt;clim(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;z_min z_max&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set the colorbar limits to the range of selected z values&lt;/span&gt;&#xA;&lt;span id=&#34;L122&#34; class=&#34;LineNr&#34;&gt;122 &lt;/span&gt;&#xA;&lt;span id=&#34;L123&#34; class=&#34;LineNr&#34;&gt;123 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save the figure&lt;/span&gt;&#xA;&lt;span id=&#34;L124&#34; class=&#34;LineNr&#34;&gt;124 &lt;/span&gt;base_filename = fullfile(outputFolder, &lt;span class=&#34;Constant&#34;&gt;&#39;merged_psd_selected&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L125&#34; class=&#34;LineNr&#34;&gt;125 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save as MATLAB figure (.fig)&lt;/span&gt;&#xA;&lt;span id=&#34;L126&#34; class=&#34;LineNr&#34;&gt;126 &lt;/span&gt;savefig(gcf, &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;base_filename &lt;span class=&#34;Constant&#34;&gt;&#39;.fig&#39;&lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L127&#34; class=&#34;LineNr&#34;&gt;127 &lt;/span&gt;&#xA;&lt;span id=&#34;L128&#34; class=&#34;LineNr&#34;&gt;128 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save as EMF (.emf)&lt;/span&gt;&#xA;&lt;span id=&#34;L129&#34; class=&#34;LineNr&#34;&gt;129 &lt;/span&gt;print(gcf, &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;base_filename &lt;span class=&#34;Constant&#34;&gt;&#39;.emf&#39;&lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L130&#34; class=&#34;LineNr&#34;&gt;130 &lt;/span&gt;&#xA;&lt;span id=&#34;L131&#34; class=&#34;LineNr&#34;&gt;131 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save as high-DPI JPEG using print (e.g., 500 DPI)&lt;/span&gt;&#xA;&lt;span id=&#34;L132&#34; class=&#34;LineNr&#34;&gt;132 &lt;/span&gt;print(gcf, &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;base_filename &lt;span class=&#34;Constant&#34;&gt;&#39;.jpg&#39;&lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r500&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L133&#34; class=&#34;LineNr&#34;&gt;133 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%%&lt;/span&gt;&#xA;&lt;span id=&#34;L134&#34; class=&#34;LineNr&#34;&gt;134 &lt;/span&gt;&#xA;&lt;span id=&#34;L135&#34; class=&#34;LineNr&#34;&gt;135 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Interpolate data&lt;/span&gt;&#xA;&lt;span id=&#34;L136&#34; class=&#34;LineNr&#34;&gt;136 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;grid_row, grid_col&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = deal(&lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(&lt;span class=&#34;Constant&#34;&gt;400&lt;/span&gt;, &lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(yv, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(&lt;span class=&#34;Constant&#34;&gt;50&lt;/span&gt;, &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(xv, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;100&lt;/span&gt;)))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L137&#34; class=&#34;LineNr&#34;&gt;137 &lt;/span&gt;xq = logspace(&lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L138&#34; class=&#34;LineNr&#34;&gt;138 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;log10&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;min&lt;/span&gt;(xv(xv &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;0&lt;/span&gt;))), &lt;span class=&#34;Statement&#34;&gt;log10&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(xv(:))), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L139&#34; class=&#34;LineNr&#34;&gt;139 &lt;/span&gt;    grid_col)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L140&#34; class=&#34;LineNr&#34;&gt;140 &lt;/span&gt;yq = linspace(&lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L141&#34; class=&#34;LineNr&#34;&gt;141 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;min&lt;/span&gt;(yv(:)), &lt;span class=&#34;Statement&#34;&gt;max&lt;/span&gt;(yv(:)), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L142&#34; class=&#34;LineNr&#34;&gt;142 &lt;/span&gt;    grid_row)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L143&#34; class=&#34;LineNr&#34;&gt;143 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;xq, yq&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = meshgrid(xq, yq)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L144&#34; class=&#34;LineNr&#34;&gt;144 &lt;/span&gt;&#xA;&lt;span id=&#34;L145&#34; class=&#34;LineNr&#34;&gt;145 &lt;/span&gt;vq = griddata(xv, yv, vv, xq, yq)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L146&#34; class=&#34;LineNr&#34;&gt;146 &lt;/span&gt;&#xA;&lt;span id=&#34;L147&#34; class=&#34;LineNr&#34;&gt;147 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%% Plot contour&lt;/span&gt;&#xA;&lt;span id=&#34;L148&#34; class=&#34;LineNr&#34;&gt;148 &lt;/span&gt;contourf(xq, yq, vq, &lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;LineStyle&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;--&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L149&#34; class=&#34;LineNr&#34;&gt;149 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;16&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;%set(gca, &#39;YScale&#39;, &#39;log&#39;);&lt;/span&gt;&#xA;&lt;span id=&#34;L150&#34; class=&#34;LineNr&#34;&gt;150 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L151&#34; class=&#34;LineNr&#34;&gt;151 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$z(\rm m)$&amp;quot;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L152&#34; class=&#34;LineNr&#34;&gt;152 &lt;/span&gt;colormap(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;sky&amp;quot;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L153&#34; class=&#34;LineNr&#34;&gt;153 &lt;/span&gt;col = colorbar()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L154&#34; class=&#34;LineNr&#34;&gt;154 &lt;/span&gt;set(ylabel(col,&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$fS_{uu}(f) (\rm m^2/s^2)$&amp;quot;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/pivPlot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/pivPlot/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/pivPlot.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;.Todo { color: #0000ff; background-color: #ffff00; padding-bottom: 1px; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt;  1 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Clear command window, workspace, and close all figures&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt;  2 &lt;/span&gt;casePath = &lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Define the relative path to the case directory&lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt;  3 &lt;/span&gt;load(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_stat.mat&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Load statistical data for plotting&lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt;  4 &lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt;  5 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%% Plot lines&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt;  6 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 1: Double average velocity (U) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt;  7 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(U_xt, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of U_xt vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt;  8 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$U(\rm m/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt;  9 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt; 10 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis to logarithmic scale&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt; 11 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt; 12 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt; 13 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt; 14 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt; 15 &lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt; 16 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 2: Double average velocity (V) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt; 17 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(V_xt, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of V_xt vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt; 18 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$V(\rm m/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt; 19 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt; 20 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt; 21 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt; 22 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt; 23 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt; 24 &lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt; 25 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 3: Reynolds shear stress (RSS) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt; 26 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(RSS, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of RSS vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt; 27 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$-\overline{u&#39;v&#39;}(\rm m^2/s^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt; 28 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt; 29 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt; 30 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt; 31 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt; 32 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt; 33 &lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt; 34 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 4: Turbulent normal stress (uu) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt; 35 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;4&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(uu_xt, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of uu_xt vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt; 36 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$\overline{u&#39;u&#39;}(\rm m^2/s^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt; 37 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt; 38 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uu_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt; 39 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uu_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt; 40 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uu_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt; 41 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uu_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt; 42 &lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt; 43 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 5: Turbulent normal stress (vv) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt; 44 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;5&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(vv_xt, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of vv_xt vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt; 45 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$\overline{v&#39;v&#39;}(\rm m^2/s^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt; 46 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt; 47 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vv_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt; 48 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vv_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt; 49 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vv_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt; 50 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vv_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt; 51 &lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt; 52 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 6: Root mean square of velocity fluctuations (u_rms) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt; 53 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;6&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(u_rms, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of u_rms vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt; 54 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$u_{rms}(\rm m/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt; 55 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt; 56 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_rms_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt; 57 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_rms_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt; 58 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_rms_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt; 59 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_rms_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt; 60 &lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt; 61 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot 7: Root mean square of velocity fluctuations (v_rms) along the vertical line&lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt; 62 &lt;/span&gt;figure(&lt;span class=&#34;Constant&#34;&gt;7&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; scatter(v_rms, Y)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of v_rms vs Y&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt; 63 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$v_{rms}(\rm m/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt; 64 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt; 65 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms_vs_Y.emf&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-dmeta&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .emf&lt;/span&gt;&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt; 66 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms_vs_Y.fig&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .fig&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt; 67 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt; 68 &lt;/span&gt;print(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms_vs_Y.jpg&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-djpeg&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;-r300&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .jpg&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt; 69 &lt;/span&gt;saveas(gcf, fullfile(&lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;analysis_figures&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms_vs_Y.svg&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Save plot as .svg&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt; 70 &lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt; 71 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% %% Plot fields (commented out)&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt; 72 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% &lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt; 73 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% figure(8)&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt; 74 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% imagesc(X,Y, U_t); % Plot 2D field of U_t&lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt; 75 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(gca,&#39;YDir&#39;,&#39;normal&#39;); % Set y-axis direction to normal&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt; 76 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(xlabel(&amp;quot;$x/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt; 77 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(ylabel(&amp;quot;$y/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt; 78 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c = colorbar; % Add colorbar&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt; 79 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.String = &#39;$\overline{U}/\rm m/s$&#39;; % Set colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt; 80 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.Interpreter = &#39;latex&#39;; % Use LaTeX formatting for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt; 81 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.FontSize = 14; % Set font size for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt; 82 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% % hold on;&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt; 83 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% % h1 = quiver(data.x{1, 1}, flip(data.y{1, 1}), flip(U_t), zeros(size(V_t))); % Add quiver plot (commented out)&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt; 84 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% % set(h1, &#39;AutoScale&#39;, &#39;on&#39;, &#39;AutoScaleFactor&#39;, 5); % Configure quiver plot scaling&lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt; 85 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% &lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt; 86 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% figure(9)&lt;/span&gt;&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt; 87 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% imagesc(X,Y,V_t); % Plot 2D field of V_t&lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt; 88 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(gca,&#39;YDir&#39;,&#39;normal&#39;); % Set y-axis direction to normal&lt;/span&gt;&#xA;&lt;span id=&#34;L89&#34; class=&#34;LineNr&#34;&gt; 89 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(xlabel(&amp;quot;$x/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L90&#34; class=&#34;LineNr&#34;&gt; 90 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(ylabel(&amp;quot;$y/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L91&#34; class=&#34;LineNr&#34;&gt; 91 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c = colorbar; % Add colorbar&lt;/span&gt;&#xA;&lt;span id=&#34;L92&#34; class=&#34;LineNr&#34;&gt; 92 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.String = &#39;$\overline{V}/\rm m/s$&#39;; % Set colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L93&#34; class=&#34;LineNr&#34;&gt; 93 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.Interpreter = &#39;latex&#39;; % Use LaTeX formatting for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L94&#34; class=&#34;LineNr&#34;&gt; 94 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.FontSize = 14; % Set font size for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L95&#34; class=&#34;LineNr&#34;&gt; 95 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% &lt;/span&gt;&#xA;&lt;span id=&#34;L96&#34; class=&#34;LineNr&#34;&gt; 96 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% figure(10)&lt;/span&gt;&#xA;&lt;span id=&#34;L97&#34; class=&#34;LineNr&#34;&gt; 97 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% imagesc(X,Y, V_t); % Plot 2D field of V_t (duplicate of figure 9)&lt;/span&gt;&#xA;&lt;span id=&#34;L98&#34; class=&#34;LineNr&#34;&gt; 98 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(gca,&#39;YDir&#39;,&#39;normal&#39;); % Set y-axis direction to normal&lt;/span&gt;&#xA;&lt;span id=&#34;L99&#34; class=&#34;LineNr&#34;&gt; 99 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(xlabel(&amp;quot;$x/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L100&#34; class=&#34;LineNr&#34;&gt;100 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(ylabel(&amp;quot;$y/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L101&#34; class=&#34;LineNr&#34;&gt;101 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c = colorbar; % Add colorbar&lt;/span&gt;&#xA;&lt;span id=&#34;L102&#34; class=&#34;LineNr&#34;&gt;102 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.String = &#39;$\overline{V}/\rm m/s$&#39;; % Set colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L103&#34; class=&#34;LineNr&#34;&gt;103 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.Interpreter = &#39;latex&#39;; % Use LaTeX formatting for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L104&#34; class=&#34;LineNr&#34;&gt;104 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.FontSize = 14; % Set font size for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L105&#34; class=&#34;LineNr&#34;&gt;105 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% &lt;/span&gt;&#xA;&lt;span id=&#34;L106&#34; class=&#34;LineNr&#34;&gt;106 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% figure(11)&lt;/span&gt;&#xA;&lt;span id=&#34;L107&#34; class=&#34;LineNr&#34;&gt;107 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% imagesc(X,Y,sqrt(U_t.*U_t + V_t.*V_t)); % Plot 2D field of velocity magnitude&lt;/span&gt;&#xA;&lt;span id=&#34;L108&#34; class=&#34;LineNr&#34;&gt;108 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(gca,&#39;YDir&#39;,&#39;normal&#39;); % Set y-axis direction to normal&lt;/span&gt;&#xA;&lt;span id=&#34;L109&#34; class=&#34;LineNr&#34;&gt;109 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(xlabel(&amp;quot;$x/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set x-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L110&#34; class=&#34;LineNr&#34;&gt;110 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% set(ylabel(&amp;quot;$y/\rm m$&amp;quot;,&amp;quot;FontSize&amp;quot;, 14), &#39;Interpreter&#39;, &#39;latex&#39;); % Set y-axis label with LaTeX formatting&lt;/span&gt;&#xA;&lt;span id=&#34;L111&#34; class=&#34;LineNr&#34;&gt;111 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c = colorbar; % Add colorbar&lt;/span&gt;&#xA;&lt;span id=&#34;L112&#34; class=&#34;LineNr&#34;&gt;112 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.String = &#39;$\sqrt{\overline{U}^2+\overline{V}^2}/\rm m/s$&#39;; % Set colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L113&#34; class=&#34;LineNr&#34;&gt;113 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.Interpreter = &#39;latex&#39;; % Use LaTeX formatting for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L114&#34; class=&#34;LineNr&#34;&gt;114 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% c.Label.FontSize = 14; % Set font size for colorbar label&lt;/span&gt;&#xA;&lt;span id=&#34;L115&#34; class=&#34;LineNr&#34;&gt;115 &lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/PSD/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/PSD/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/PSD.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt; 1 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% PSD.m&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt; 2 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%&lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt; 3 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% This script processes velocity data to compute the Power Spectral Density (PSD)&lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt; 4 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% using Welch&#39;s method. It performs the following steps:&lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt; 5 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 1. Clears the workspace, closes all figures, and clears the command window.&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt; 6 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 2. Loads velocity data from a specified file.&lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt; 7 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 3. Computes the PSD for each spatial point in the velocity data using Welch&#39;s method.&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt; 8 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 4. Applies a 3x3 moving average filter to smooth the PSD data.&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt; 9 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 5. Saves the processed PSD data to a .mat file for further analysis.&lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt;10 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt;11 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Key Variables:&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt;12 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - casePath: Path to the case directory containing the input data.&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt;13 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - Fs: Sampling frequency (Hz).&lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt;14 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - X, Y: Spatial coordinates of the velocity data.&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt;15 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - xmesh, ymesh: Mesh grids for the spatial coordinates.&lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt;16 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - U_xt: Mean velocity over time.&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt;17 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - u_pri: Primary velocity data (3D matrix).&lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt;18 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - window_length: Length of the window used in Welch&#39;s method.&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt;19 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - nfft: Number of FFT points (next power of 2 of window_length).&lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt;20 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - fs: Frequency matrix (3D matrix).&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt;21 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - pxxs: PSD matrix (3D matrix).&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt;22 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt;23 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Functions:&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt;24 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - patch_moving_average_conv: Computes a moving average using convolution&lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt;25 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   with a specified kernel. Used to smooth the PSD data.&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt;26 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt;27 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Outputs:&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt;28 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - Saves the processed PSD data (fs, pxxs) along with spatial coordinates&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt;29 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   (X, Y, xmesh, ymesh) and mean velocity (U_xt) to &#39;pxxs.mat&#39;.&lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt;30 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%&lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt;31 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Notes:&lt;/span&gt;&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt;32 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - The script uses a 3x3 moving average filter for smoothing.&lt;/span&gt;&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt;33 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - Welch&#39;s method is applied to each spatial point in the velocity data.&lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt;34 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - The PSD is visualized on a log-log scale during computation.&lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt;35 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Clear workspace, close all figures, and clear command window&lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt;36 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt;37 &lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt;38 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define the path to the case directory and sampling frequency&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt;39 &lt;/span&gt;casePath = &lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt;40 &lt;/span&gt;Fs = &lt;span class=&#34;Constant&#34;&gt;1100&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Sampling frequency (Hz) edited by YZ&lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt;41 &lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt;42 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Load the data from the specified file&lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt;43 &lt;/span&gt;data = load(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u4pxx.mat&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt;44 &lt;/span&gt;X = data.X&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% X-coordinates&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt;45 &lt;/span&gt;Y = data.Y&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Y-coordinates&lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt;46 &lt;/span&gt;xmesh = data.xmesh&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% X-mesh grid&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt;47 &lt;/span&gt;ymesh = data.ymesh&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Y-mesh grid&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt;48 &lt;/span&gt;U_xt = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(data.U_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Mean velocity over time&lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt;49 &lt;/span&gt;u_pri = data.u_pri&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Primary velocity data&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt;50 &lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt;51 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Get the dimensions of the velocity data&lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt;52 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;m, n, &lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = &lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(u_pri)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt;53 &lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt;54 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define the window length for Welch&#39;s method and calculate FFT parameters&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt;55 &lt;/span&gt;window_length = &lt;span class=&#34;Constant&#34;&gt;8000&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Length of the window for Welch&#39;s method&lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt;56 &lt;/span&gt;nfft = &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;^&lt;/span&gt;nextpow2(window_length)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Next power of 2 for FFT&lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt;57 &lt;/span&gt;output_length = nfft&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Output length for real-valued input&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt;58 &lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt;59 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Initialize matrices to store frequency and power spectral density (PSD)&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt;60 &lt;/span&gt;fs = &lt;span class=&#34;Statement&#34;&gt;zeros&lt;/span&gt;(m, n, output_length)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Frequency matrix&lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt;61 &lt;/span&gt;pxxs = &lt;span class=&#34;Statement&#34;&gt;zeros&lt;/span&gt;(m, n, output_length)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% PSD matrix&lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt;62 &lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt;63 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Loop through each spatial point to compute PSD using Welch&#39;s method&lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt;64 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; ii = &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:m&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt;65 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;for&lt;/span&gt; jj = &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;:n&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt;66 &lt;/span&gt;        &lt;span class=&#34;Comment&#34;&gt;% Compute PSD and frequency using Welch&#39;s method&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt;67 &lt;/span&gt;        &lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;pxxs(ii, jj, :), fs(ii, jj, :)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = pwelch(squeeze(u_pri(ii, jj, :)), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt;68 &lt;/span&gt;            window_length, &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, Fs)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt;69 &lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt;70 &lt;/span&gt;        &lt;span class=&#34;Comment&#34;&gt;% Plot the PSD on a log-log scale for visualization&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt;71 &lt;/span&gt;        loglog(squeeze(fs(ii, jj, :)), squeeze(pxxs(ii, jj, :)))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt;72 &lt;/span&gt;    &lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt;73 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt;74 &lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt;75 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define the window size for moving average (3x3)&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt;76 &lt;/span&gt;window_size = &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt;77 &lt;/span&gt;kernel = &lt;span class=&#34;Statement&#34;&gt;ones&lt;/span&gt;(window_size, window_size)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% 3x3 matrix of ones&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt;78 &lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt;79 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Apply a 3x3 moving average filter to smooth the PSD data&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt;80 &lt;/span&gt;pxxs = patch_moving_average_conv(pxxs, kernel)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt;81 &lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt;82 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save the processed data to a .mat file&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt;83 &lt;/span&gt;save(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;pxxs.mat&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;X&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;xmesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Y&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;ymesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;fs&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;pxxs&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_xt&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt;84 &lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt;85 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Function to compute a moving average using convolution&lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt;86 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;function&lt;/span&gt; moving_avg_matrix = patch_moving_average_conv(matrix, kernel)&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt;87 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Input: matrix (e.g., 6x10), kernel (e.g., 3x3)&lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt;88 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Output: moving_avg_matrix with the same size as input, containing averages&lt;/span&gt;&#xA;&lt;span id=&#34;L89&#34; class=&#34;LineNr&#34;&gt;89 &lt;/span&gt;&#xA;&lt;span id=&#34;L90&#34; class=&#34;LineNr&#34;&gt;90 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Perform convolution with &#39;same&#39; to keep output size equal to input&lt;/span&gt;&#xA;&lt;span id=&#34;L91&#34; class=&#34;LineNr&#34;&gt;91 &lt;/span&gt;    conv_result = convn(matrix, kernel, &lt;span class=&#34;Constant&#34;&gt;&#39;same&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L92&#34; class=&#34;LineNr&#34;&gt;92 &lt;/span&gt;&#xA;&lt;span id=&#34;L93&#34; class=&#34;LineNr&#34;&gt;93 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Create a matrix to count how many elements contribute at each position&lt;/span&gt;&#xA;&lt;span id=&#34;L94&#34; class=&#34;LineNr&#34;&gt;94 &lt;/span&gt;    contrib_count = convn(&lt;span class=&#34;Statement&#34;&gt;ones&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(matrix)), kernel, &lt;span class=&#34;Constant&#34;&gt;&#39;same&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L95&#34; class=&#34;LineNr&#34;&gt;95 &lt;/span&gt;&#xA;&lt;span id=&#34;L96&#34; class=&#34;LineNr&#34;&gt;96 &lt;/span&gt;    &lt;span class=&#34;Comment&#34;&gt;% Compute the moving average by dividing the sum by the number of contributing elements&lt;/span&gt;&#xA;&lt;span id=&#34;L97&#34; class=&#34;LineNr&#34;&gt;97 &lt;/span&gt;    moving_avg_matrix = conv_result &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; contrib_count&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L98&#34; class=&#34;LineNr&#34;&gt;98 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/pxxPlot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/pxxPlot/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/pxxPlot.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt; 1 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% This script processes and visualizes Power Spectral Density (PSD) data &lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt; 2 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% from a given dataset. It generates multiple plots to analyze the PSD &lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt; 3 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% and pre-multiplied PSD at different vertical positions in the dataset. &lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt; 4 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Additionally, it creates a contour plot to visualize the variation of &lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt; 5 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% pre-multiplied PSD along the vertical centerline.&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt; 6 &lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt; 7 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% The script performs the following steps:&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt; 8 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 1. Loads PSD data (`pxxs`) and frequency data (`fs`) from a specified file.&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt; 9 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 2. Extracts data at specific vertical positions (1/4, 1/2, and 3/4 of the &lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt;10 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    vertical range) and plots:&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt;11 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    - PSD vs frequency on a log-log scale.&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt;12 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    - Pre-multiplied PSD (`f * PSD`) vs frequency on a log scale.&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt;13 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 3. Extracts PSD data along the vertical centerline and interpolates it &lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt;14 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    onto a finer grid for visualization.&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt;15 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% 4. Generates a contour plot of the pre-multiplied PSD along the vertical &lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt;16 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    centerline, with frequency on the x-axis and vertical position on the &lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt;17 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%    y-axis.&lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt;18 &lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt;19 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Key variables:&lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt;20 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `fs`: Frequency data (Hz).&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt;21 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `pxxs`: PSD data (m^2/s).&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt;22 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `Y`: Vertical positions (m).&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt;23 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `ymesh`: Vertical grid positions (m).&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt;24 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `xv`, `yv`, `vv`: Data for interpolation (frequency, vertical position, &lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt;25 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   and pre-multiplied PSD, respectively).&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt;26 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - `xq`, `yq`, `vq`: Interpolated grid data for contour plotting.&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt;27 &lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt;28 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Notes:&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt;29 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - The script uses logarithmic scaling for frequency and PSD axes to &lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt;30 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   better visualize data spanning multiple orders of magnitude.&lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt;31 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - The contour plot provides a detailed view of how the pre-multiplied &lt;/span&gt;&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt;32 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   PSD varies with frequency and vertical position.&lt;/span&gt;&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt;33 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% - Ensure that the required data files are available in the specified &lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt;34 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;%   `casePath` directory before running the script.&lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt;35 &lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt;36 &lt;/span&gt;load(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;pxxs.mat&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt;37 &lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt;38 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;ii_c, jj_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = deal(&lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;4&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;4&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt;39 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt;40 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt;41 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt;42 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt;43 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$S_{uu}(f) (m^2/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt;44 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt;45 &lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt;46 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt;47 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :) &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt;48 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt;49 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt;50 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt;51 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$fS_{uu}(f) (m^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt;52 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt;53 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;pre-multiplied PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt;54 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt;55 &lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt;56 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;ii_c, jj_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = deal(&lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt;57 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt;58 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt;59 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt;60 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt;61 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$S_{uu}(f) (m^2/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt;62 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt;63 &lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt;64 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt;65 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :) &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt;66 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt;67 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt;68 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt;69 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$fS_{uu}(f) (m^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt;70 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt;71 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;pre-multiplied PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt;72 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt;73 &lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt;74 &lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;ii_c, jj_c&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt; = deal(&lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;4&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;round&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;size&lt;/span&gt;(fs, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;4&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt;75 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt;76 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt;77 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt;78 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt;79 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$S_{uu}(f) (m^2/s)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt;80 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt;81 &lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt;82 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt;83 &lt;/span&gt;plot(&lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), &lt;span class=&#34;Statement&#34;&gt;reshape&lt;/span&gt;(fs(ii_c, jj_c, :) &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; pxxs(ii_c, jj_c, :), &lt;span class=&#34;Identifier&#34;&gt;[]&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt;84 &lt;/span&gt;grid on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;XScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt;85 &lt;/span&gt;set(xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$f$ (Hz)&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt;86 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt;87 &lt;/span&gt;set(ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$fS_{uu}(f) (m^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt;88 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L89&#34; class=&#34;LineNr&#34;&gt;89 &lt;/span&gt;set(title(sprintf(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;pre-multiplied PSD at y = %.5f m&amp;quot;&lt;/span&gt;, Y(jj_c)), FontSize=&lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;), &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L90&#34; class=&#34;LineNr&#34;&gt;90 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L91&#34; class=&#34;LineNr&#34;&gt;91 &lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/raw2data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/raw2data/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/raw2data.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt; 1 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% PIVLab frame data format&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt; 2 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% This section describes the 3D data structure used in PIVLab, where the data is organized as a 3D matrix&lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt; 3 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% with dimensions corresponding to rows (mRows), columns (nCols), and frames (nFrame).&lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt; 4 &lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt; 5 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Clear workspace, close figures, and initialize&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt; 6 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt; 7 &lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt; 8 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Load PIVLab data from a specified file&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt; 9 &lt;/span&gt;casePath = &lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt;10 &lt;/span&gt;data = load(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;normalized_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;PIVlab.mat&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt;11 &lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt;12 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Extract spatial mesh grids and display measurement domain information&lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt;13 &lt;/span&gt;xmesh = data.x{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; X = xmesh(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;, :)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt;14 &lt;/span&gt;ymesh = data.y{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;}&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; Y = ymesh(:, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt;15 &lt;/span&gt;fprintf(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;&#39;Measure domain: \n&#39;&lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt;16 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;X from %.5f to %.5f, nX = %d, dX = %.5f.\n&#39;&lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt;17 &lt;/span&gt;    &lt;span class=&#34;Constant&#34;&gt;&#39;Y from %.5f to %.5f, nY = %d, dY = %.5f.\n&#39;&lt;/span&gt;&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;, &lt;span class=&#34;Comment&#34;&gt;...&lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt;18 &lt;/span&gt;    X(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), X(&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;), length(X), &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(diff(X)), Y(&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;), Y(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;), length(Y), &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;abs&lt;/span&gt;(diff(Y))))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt;19 &lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt;20 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Check if filtered data is available; otherwise, use original data&lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt;21 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;if&lt;/span&gt; isempty(data.u_filtered{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;}) &lt;span class=&#34;Statement&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isempty(data.v_filtered{&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;})&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt;22 &lt;/span&gt;    warning(&lt;span class=&#34;Constant&#34;&gt;&#39;Data not filtered in PIVLab. Mat file may contain abnormal data.&#39;&lt;/span&gt;)&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt;23 &lt;/span&gt;    u_filtered = data.u_original&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt;24 &lt;/span&gt;    v_filtered = data.v_original&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt;25 &lt;/span&gt;    typevector = data.typevector_original&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt;26 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;else&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt;27 &lt;/span&gt;    u_filtered = data.u_filtered&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt;28 &lt;/span&gt;    v_filtered = data.v_filtered&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt;29 &lt;/span&gt;    typevector = data.typevector_filtered&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt;30 &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;end&lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt;31 &lt;/span&gt;&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt;32 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Convert cell arrays to 3D matrices for further processing&lt;/span&gt;&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt;33 &lt;/span&gt;u_filtered = cat(&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;, u_filtered{:})&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt;34 &lt;/span&gt;v_filtered = cat(&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;, v_filtered{:})&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt;35 &lt;/span&gt;typevector = cat(&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;, typevector{:})&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt;36 &lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt;37 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Remove invalid, NaN, and infinite data based on typevector&lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt;38 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Valid vectors are identified by typevector values (0: masked, 1: valid, 2: erroneous)&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt;39 &lt;/span&gt;validVector = (typevector &lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;= &lt;span class=&#34;Constant&#34;&gt;0&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt;40 &lt;/span&gt;u_filtered = u_filtered &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; validVector &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; (&lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;isnan(u_filtered)) &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; (&lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;isinf(u_filtered))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt;41 &lt;/span&gt;v_filtered = v_filtered &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; validVector &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; (&lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;isnan(v_filtered)) &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; (&lt;span class=&#34;Statement&#34;&gt;~&lt;/span&gt;isinf(v_filtered))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt;42 &lt;/span&gt;nValidFrame = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(validVector, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Count valid frames for each cell&lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt;43 &lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt;44 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Statistical processing&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt;45 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute time-averaged velocity for each cell&lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt;46 &lt;/span&gt;U_t = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(u_filtered, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt;47 &lt;/span&gt;V_t = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(v_filtered, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt;48 &lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt;49 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute double-averaged velocity (spatial average in x-direction)&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt;50 &lt;/span&gt;U_xt = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(U_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt;51 &lt;/span&gt;V_xt = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(V_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt;52 &lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt;53 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute turbulent velocity components (fluctuations)&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt;54 &lt;/span&gt;u_pri = u_filtered &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; U_t&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt;55 &lt;/span&gt;v_pri = v_filtered &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt; V_t&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% v&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt;56 &lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt;57 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute second moments (Reynolds shear stress and turbulent kinetic energy)&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt;58 &lt;/span&gt;uv = u_pri &lt;span class=&#34;Statement&#34;&gt;.*&lt;/span&gt; v_pri&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;v&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt;59 &lt;/span&gt;uu = u_pri&lt;span class=&#34;Statement&#34;&gt;.^&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;u&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt;60 &lt;/span&gt;vv = v_pri&lt;span class=&#34;Statement&#34;&gt;.^&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% v&#39;v&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt;61 &lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt;62 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute third moments (skewness-related terms)&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt;63 &lt;/span&gt;uuu = u_pri&lt;span class=&#34;Statement&#34;&gt;.^&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt;64 &lt;/span&gt;vvv = v_pri&lt;span class=&#34;Statement&#34;&gt;.^&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt;65 &lt;/span&gt;&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt;66 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute time-averaged second and third moments&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt;67 &lt;/span&gt;uv_t  = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(uv, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt;68 &lt;/span&gt;uu_t  = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(uu, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt;69 &lt;/span&gt;vv_t  = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(vv, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt;70 &lt;/span&gt;uuu_t = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(uuu, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt;71 &lt;/span&gt;vvv_t = &lt;span class=&#34;Statement&#34;&gt;sum&lt;/span&gt;(vvv, &lt;span class=&#34;Constant&#34;&gt;3&lt;/span&gt;) &lt;span class=&#34;Statement&#34;&gt;./&lt;/span&gt; nValidFrame&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt;72 &lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt;73 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute double-averaged second and third moments (spatial average in x-direction)&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt;74 &lt;/span&gt;uv_xt  = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(uv_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;v&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt;75 &lt;/span&gt;RSS    = &lt;span class=&#34;Statement&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; uv_xt&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Reynolds shear stress&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt;76 &lt;/span&gt;uu_xt  = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(uu_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;u&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt;77 &lt;/span&gt;vv_xt  = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(vv_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% v&#39;v&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt;78 &lt;/span&gt;uuu_xt = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(uuu_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% u&#39;u&#39;u&#39;&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt;79 &lt;/span&gt;vvv_xt = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(vvv_t, &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt;80 &lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt;81 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute root mean square (RMS) values for turbulence strength&lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt;82 &lt;/span&gt;u_rms = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;sqrt&lt;/span&gt;(uu_t), &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% RMS of u&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt;83 &lt;/span&gt;v_rms = &lt;span class=&#34;Statement&#34;&gt;mean&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;sqrt&lt;/span&gt;(vv_t), &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% RMS of v&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt;84 &lt;/span&gt;&#xA;&lt;span id=&#34;L85&#34; class=&#34;LineNr&#34;&gt;85 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Save statistical results to files&lt;/span&gt;&#xA;&lt;span id=&#34;L86&#34; class=&#34;LineNr&#34;&gt;86 &lt;/span&gt;save(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_stat.mat&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;xmesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;X&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;ymesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Y&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_xt&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_xt&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uu_xt&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vv_xt&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_rms&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_rms&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;uuu_xt&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;vvv_xt&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L87&#34; class=&#34;LineNr&#34;&gt;87 &lt;/span&gt;save(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u4pxx.mat&#39;&lt;/span&gt;), &lt;span class=&#34;Constant&#34;&gt;&#39;-v7.3&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;xmesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;X&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;ymesh&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Y&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;U_t&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;V_t&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_pri&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;v_pri&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L88&#34; class=&#34;LineNr&#34;&gt;88 &lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/codes/PIV-processing/ustar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/codes/PIV-processing/ustar/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;&lt;title&gt;~/openchannel/content/codes/PIV-processing/ustar.m.html&lt;/title&gt;&#xA;&lt;meta name=&#34;Generator&#34; content=&#34;Vim/9.1&#34;&gt;&#xA;&lt;meta name=&#34;plugin-version&#34; content=&#34;vim9.0_v2&#34;&gt;&#xA;&lt;meta name=&#34;syntax&#34; content=&#34;matlab&#34;&gt;&#xA;&lt;meta name=&#34;settings&#34; content=&#34;number_lines,use_css,no_foldcolumn,expand_tabs,line_ids,pre_wrap,prevent_copy=,use_input_for_pc=none&#34;&gt;&#xA;&lt;meta name=&#34;colorscheme&#34; content=&#34;none&#34;&gt;&#xA;&lt;style&gt;&#xA;&lt;!--&#xA;pre { white-space: pre-wrap; font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;body { font-family: &#34;Roboto Mono&#34;; color: #ffffff; background-color: #000000; }&#xA;* { font-size: 1em; }&#xA;a { color: inherit; }&#xA;.Comment { color: #80a0ff; }&#xA;.Constant { color: #ffa0a0; }&#xA;.Special { color: #ffa500; }&#xA;.Identifier { color: #40ffff; }&#xA;.Statement { color: #ffff60; font-weight: bold; }&#xA;.LineNr { color: #ffff00; }&#xA;.Todo { color: #0000ff; background-color: #ffff00; padding-bottom: 1px; }&#xA;--&gt;&#xA;&lt;/style&gt;&#xA;&#xA;&lt;script&gt;&#xA;&lt;!--&#xA;&#xA;/* function to open any folds containing a jumped-to line before jumping to it */&#xA;function JumpToLine()&#xA;{&#xA;  var lineNum;&#xA;  lineNum = window.location.hash;&#xA;  lineNum = lineNum.substr(1); /* strip off &#39;#&#39; */&#xA;&#xA;  if (lineNum.indexOf(&#39;L&#39;) == -1) {&#xA;    lineNum = &#39;L&#39;+lineNum;&#xA;  }&#xA;  var lineElem = document.getElementById(lineNum);&#xA;  /* Always jump to new location even if the line was hidden inside a fold, or&#xA;   * we corrected the raw number to a line ID.&#xA;   */&#xA;  if (lineElem) {&#xA;    lineElem.scrollIntoView(true);&#xA;  }&#xA;  return true;&#xA;}&#xA;if (&#39;onhashchange&#39; in window) {&#xA;  window.onhashchange = JumpToLine;&#xA;}&#xA;&#xA;--&gt;&#xA;&lt;/script&gt;&#xA;&lt;/head&gt;&#xA;&lt;body onload=&#39;JumpToLine();&#39;&gt;&#xA;&lt;pre id=&#39;vimCodeElement&#39;&gt;&#xA;&lt;span id=&#34;L1&#34; class=&#34;LineNr&#34;&gt; 1 &lt;/span&gt;clc&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; close all&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L2&#34; class=&#34;LineNr&#34;&gt; 2 &lt;/span&gt;&#xA;&lt;span id=&#34;L3&#34; class=&#34;LineNr&#34;&gt; 3 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Define the path to the case data and load the velocity statistics&lt;/span&gt;&#xA;&lt;span id=&#34;L4&#34; class=&#34;LineNr&#34;&gt; 4 &lt;/span&gt;casePath = &lt;span class=&#34;Constant&#34;&gt;&#39;..&#39;&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L5&#34; class=&#34;LineNr&#34;&gt; 5 &lt;/span&gt;load(fullfile(casePath, &lt;span class=&#34;Constant&#34;&gt;&#39;figure_data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;u_stat.mat&#39;&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L6&#34; class=&#34;LineNr&#34;&gt; 6 &lt;/span&gt;&#xA;&lt;span id=&#34;L7&#34; class=&#34;LineNr&#34;&gt; 7 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%% Log-law velocity profile analysis&lt;/span&gt;&#xA;&lt;span id=&#34;L8&#34; class=&#34;LineNr&#34;&gt; 8 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% The log-law velocity profile satisfies the equation:&lt;/span&gt;&#xA;&lt;span id=&#34;L9&#34; class=&#34;LineNr&#34;&gt; 9 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% U+ = 1/k * log(y+) + B&lt;/span&gt;&#xA;&lt;span id=&#34;L10&#34; class=&#34;LineNr&#34;&gt;10 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% where U+ = U/U_tau, y+ = y*U_tau/nu, k = 0.41, B = 5.2&lt;/span&gt;&#xA;&lt;span id=&#34;L11&#34; class=&#34;LineNr&#34;&gt;11 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Perform linear regression to fit U and y in the semilog plot.&lt;/span&gt;&#xA;&lt;span id=&#34;L12&#34; class=&#34;LineNr&#34;&gt;12 &lt;/span&gt;&#xA;&lt;span id=&#34;L13&#34; class=&#34;LineNr&#34;&gt;13 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Select the log layer region based on y values&lt;/span&gt;&#xA;&lt;span id=&#34;L14&#34; class=&#34;LineNr&#34;&gt;14 &lt;/span&gt;log_index = Y &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;0.015&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;&amp;amp;&lt;/span&gt; Y &lt;span class=&#34;Statement&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;0.035&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;Comment&#34;&gt;% Define the log layer range&lt;/span&gt;&#xA;&lt;span id=&#34;L15&#34; class=&#34;LineNr&#34;&gt;15 &lt;/span&gt;U_log = U_xt(log_index)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;Comment&#34;&gt;% Extract U values in the log layer&lt;/span&gt;&#xA;&lt;span id=&#34;L16&#34; class=&#34;LineNr&#34;&gt;16 &lt;/span&gt;Y_log = &lt;span class=&#34;Statement&#34;&gt;log10&lt;/span&gt;(Y(log_index))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;Comment&#34;&gt;% Extract log10(y) values in the log layer&lt;/span&gt;&#xA;&lt;span id=&#34;L17&#34; class=&#34;LineNr&#34;&gt;17 &lt;/span&gt;&#xA;&lt;span id=&#34;L18&#34; class=&#34;LineNr&#34;&gt;18 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Perform linear regression to find the slope and intercept&lt;/span&gt;&#xA;&lt;span id=&#34;L19&#34; class=&#34;LineNr&#34;&gt;19 &lt;/span&gt;p = polyfit(Y_log, U_log, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L20&#34; class=&#34;LineNr&#34;&gt;20 &lt;/span&gt;&#xA;&lt;span id=&#34;L21&#34; class=&#34;LineNr&#34;&gt;21 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Calculate friction velocity (u_tau) from the log-law fit&lt;/span&gt;&#xA;&lt;span id=&#34;L22&#34; class=&#34;LineNr&#34;&gt;22 &lt;/span&gt;k = &lt;span class=&#34;Constant&#34;&gt;0.41&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                          &lt;span class=&#34;Comment&#34;&gt;% von Kármán constant&lt;/span&gt;&#xA;&lt;span id=&#34;L23&#34; class=&#34;LineNr&#34;&gt;23 &lt;/span&gt;U_tau_log = k &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; p(&lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;              &lt;span class=&#34;Comment&#34;&gt;% Friction velocity from log-law fit&lt;/span&gt;&#xA;&lt;span id=&#34;L24&#34; class=&#34;LineNr&#34;&gt;24 &lt;/span&gt;disp(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;&#39;u_tau from log law fit: &#39;&lt;/span&gt;, num2str(U_tau_log)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L25&#34; class=&#34;LineNr&#34;&gt;25 &lt;/span&gt;&#xA;&lt;span id=&#34;L26&#34; class=&#34;LineNr&#34;&gt;26 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Calculate kinematic viscosity based on water temperature&lt;/span&gt;&#xA;&lt;span id=&#34;L27&#34; class=&#34;LineNr&#34;&gt;27 &lt;/span&gt;T = &lt;span class=&#34;Constant&#34;&gt;13.4&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                          &lt;span class=&#34;Comment&#34;&gt;% Temperature in degrees Celsius&lt;/span&gt;&#xA;&lt;span id=&#34;L28&#34; class=&#34;LineNr&#34;&gt;28 &lt;/span&gt;nu = &lt;span class=&#34;Constant&#34;&gt;1e-6&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; (&lt;span class=&#34;Constant&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt;(T&lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;40&lt;/span&gt;))&lt;span class=&#34;Statement&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;1.45&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;Comment&#34;&gt;% Kinematic viscosity (m^2/s)&lt;/span&gt;&#xA;&lt;span id=&#34;L29&#34; class=&#34;LineNr&#34;&gt;29 &lt;/span&gt;&#xA;&lt;span id=&#34;L30&#34; class=&#34;LineNr&#34;&gt;30 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Compute dimensionless velocity (U+) and wall-normal distance (y+)&lt;/span&gt;&#xA;&lt;span id=&#34;L31&#34; class=&#34;LineNr&#34;&gt;31 &lt;/span&gt;y_plus = Y &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; U_tau_log &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; nu&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L32&#34; class=&#34;LineNr&#34;&gt;32 &lt;/span&gt;U_plus = U_xt &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; U_tau_log&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L33&#34; class=&#34;LineNr&#34;&gt;33 &lt;/span&gt;&#xA;&lt;span id=&#34;L34&#34; class=&#34;LineNr&#34;&gt;34 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot U+ vs y+ in a semilog plot&lt;/span&gt;&#xA;&lt;span id=&#34;L35&#34; class=&#34;LineNr&#34;&gt;35 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L36&#34; class=&#34;LineNr&#34;&gt;36 &lt;/span&gt;scatter(U_plus, y_plus, &lt;span class=&#34;Constant&#34;&gt;&#39;o&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of U+ vs y+&lt;/span&gt;&#xA;&lt;span id=&#34;L37&#34; class=&#34;LineNr&#34;&gt;37 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;YScale&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;log&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;         &lt;span class=&#34;Comment&#34;&gt;% Set y-axis to log scale&lt;/span&gt;&#xA;&lt;span id=&#34;L38&#34; class=&#34;LineNr&#34;&gt;38 &lt;/span&gt;xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$U^+$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L39&#34; class=&#34;LineNr&#34;&gt;39 &lt;/span&gt;ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y^+$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L40&#34; class=&#34;LineNr&#34;&gt;40 &lt;/span&gt;hold on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L41&#34; class=&#34;LineNr&#34;&gt;41 &lt;/span&gt;&#xA;&lt;span id=&#34;L42&#34; class=&#34;LineNr&#34;&gt;42 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Plot the log-law velocity profile as a reference&lt;/span&gt;&#xA;&lt;span id=&#34;L43&#34; class=&#34;LineNr&#34;&gt;43 &lt;/span&gt;y_plus_log = &lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;.^&lt;/span&gt;(Y_log) &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; U_tau_log &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; nu&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L44&#34; class=&#34;LineNr&#34;&gt;44 &lt;/span&gt;U_plus_log = (polyval(p, Y_log)) &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; U_tau_log&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L45&#34; class=&#34;LineNr&#34;&gt;45 &lt;/span&gt;plot(U_plus_log, y_plus_log, &lt;span class=&#34;Constant&#34;&gt;&#39;r--&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;LineWidth&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1.5&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Log-law fit&lt;/span&gt;&#xA;&lt;span id=&#34;L46&#34; class=&#34;LineNr&#34;&gt;46 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Adjust tick label size&lt;/span&gt;&#xA;&lt;span id=&#34;L47&#34; class=&#34;LineNr&#34;&gt;47 &lt;/span&gt;legend(&lt;span class=&#34;Constant&#34;&gt;&#39;Data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Log law fit&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Location&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Best&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L48&#34; class=&#34;LineNr&#34;&gt;48 &lt;/span&gt;&#xA;&lt;span id=&#34;L49&#34; class=&#34;LineNr&#34;&gt;49 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%% Friction velocity from channel slope&lt;/span&gt;&#xA;&lt;span id=&#34;L50&#34; class=&#34;LineNr&#34;&gt;50 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Calculate friction velocity using the slope of the channel:&lt;/span&gt;&#xA;&lt;span id=&#34;L51&#34; class=&#34;LineNr&#34;&gt;51 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% u_tau = sqrt(g * R * S), where R is the hydraulic radius and S is the slope.&lt;/span&gt;&#xA;&lt;span id=&#34;L52&#34; class=&#34;LineNr&#34;&gt;52 &lt;/span&gt;&#xA;&lt;span id=&#34;L53&#34; class=&#34;LineNr&#34;&gt;53 &lt;/span&gt;H = &lt;span class=&#34;Constant&#34;&gt;0.1112&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                        &lt;span class=&#34;Comment&#34;&gt;% Water depth (m)&lt;/span&gt;&#xA;&lt;span id=&#34;L54&#34; class=&#34;LineNr&#34;&gt;54 &lt;/span&gt;W = &lt;span class=&#34;Constant&#34;&gt;0.0867&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                        &lt;span class=&#34;Comment&#34;&gt;% Channel width (m)&lt;/span&gt;&#xA;&lt;span id=&#34;L55&#34; class=&#34;LineNr&#34;&gt;55 &lt;/span&gt;A = H &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; W&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                         &lt;span class=&#34;Comment&#34;&gt;% Cross-sectional area (m^2)&lt;/span&gt;&#xA;&lt;span id=&#34;L56&#34; class=&#34;LineNr&#34;&gt;56 &lt;/span&gt;P = &lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; H &lt;span class=&#34;Statement&#34;&gt;+&lt;/span&gt; W&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                     &lt;span class=&#34;Comment&#34;&gt;% Wetted perimeter (m)&lt;/span&gt;&#xA;&lt;span id=&#34;L57&#34; class=&#34;LineNr&#34;&gt;57 &lt;/span&gt;R = A &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; P&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                         &lt;span class=&#34;Comment&#34;&gt;% Hydraulic radius (m)&lt;/span&gt;&#xA;&lt;span id=&#34;L58&#34; class=&#34;LineNr&#34;&gt;58 &lt;/span&gt;S = &lt;span class=&#34;Constant&#34;&gt;0.52&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;348.36&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;                 &lt;span class=&#34;Comment&#34;&gt;% Channel slope&lt;/span&gt;&#xA;&lt;span id=&#34;L59&#34; class=&#34;LineNr&#34;&gt;59 &lt;/span&gt;u_tau_slope = &lt;span class=&#34;Statement&#34;&gt;sqrt&lt;/span&gt;(&lt;span class=&#34;Constant&#34;&gt;9.81&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; R &lt;span class=&#34;Statement&#34;&gt;*&lt;/span&gt; S)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;  &lt;span class=&#34;Comment&#34;&gt;% Friction velocity from slope&lt;/span&gt;&#xA;&lt;span id=&#34;L60&#34; class=&#34;LineNr&#34;&gt;60 &lt;/span&gt;disp(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;&#39;u_tau from slope of channel: &#39;&lt;/span&gt;, num2str(u_tau_slope)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L61&#34; class=&#34;LineNr&#34;&gt;61 &lt;/span&gt;&#xA;&lt;span id=&#34;L62&#34; class=&#34;LineNr&#34;&gt;62 &lt;/span&gt;&lt;span class=&#34;Todo&#34;&gt;%% Friction velocity from RSS linear depth profile&lt;/span&gt;&#xA;&lt;span id=&#34;L63&#34; class=&#34;LineNr&#34;&gt;63 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Calculate friction velocity using the Reynolds shear stress (RSS):&lt;/span&gt;&#xA;&lt;span id=&#34;L64&#34; class=&#34;LineNr&#34;&gt;64 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% u_tau = sqrt(-slope of RSS profile).&lt;/span&gt;&#xA;&lt;span id=&#34;L65&#34; class=&#34;LineNr&#34;&gt;65 &lt;/span&gt;&#xA;&lt;span id=&#34;L66&#34; class=&#34;LineNr&#34;&gt;66 &lt;/span&gt;figure()&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L67&#34; class=&#34;LineNr&#34;&gt;67 &lt;/span&gt;scatter(RSS, Y, &lt;span class=&#34;Constant&#34;&gt;&#39;o&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;              &lt;span class=&#34;Comment&#34;&gt;% Scatter plot of RSS vs y&lt;/span&gt;&#xA;&lt;span id=&#34;L68&#34; class=&#34;LineNr&#34;&gt;68 &lt;/span&gt;xlabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$-\overline{u&#39;v&#39;}(\rm m^2/s^2)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L69&#34; class=&#34;LineNr&#34;&gt;69 &lt;/span&gt;ylabel(&lt;span class=&#34;Constant&#34;&gt;&amp;quot;$y(\rm m)$&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&amp;quot;FontSize&amp;quot;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;14&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Interpreter&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;latex&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L70&#34; class=&#34;LineNr&#34;&gt;70 &lt;/span&gt;hold on&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L71&#34; class=&#34;LineNr&#34;&gt;71 &lt;/span&gt;&#xA;&lt;span id=&#34;L72&#34; class=&#34;LineNr&#34;&gt;72 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Perform linear regression on the RSS profile in the selected range&lt;/span&gt;&#xA;&lt;span id=&#34;L73&#34; class=&#34;LineNr&#34;&gt;73 &lt;/span&gt;RSS_index = Y &lt;span class=&#34;Statement&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;0.03&lt;/span&gt; &lt;span class=&#34;Statement&#34;&gt;&amp;amp;&lt;/span&gt; Y &lt;span class=&#34;Statement&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;Constant&#34;&gt;0.05&lt;/span&gt;&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;Comment&#34;&gt;% Define the range for linear fit&lt;/span&gt;&#xA;&lt;span id=&#34;L74&#34; class=&#34;LineNr&#34;&gt;74 &lt;/span&gt;RSS_linear = RSS(RSS_index)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;       &lt;span class=&#34;Comment&#34;&gt;% Extract RSS values in the range&lt;/span&gt;&#xA;&lt;span id=&#34;L75&#34; class=&#34;LineNr&#34;&gt;75 &lt;/span&gt;Y_linear = Y(RSS_index)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;           &lt;span class=&#34;Comment&#34;&gt;% Extract y values in the range&lt;/span&gt;&#xA;&lt;span id=&#34;L76&#34; class=&#34;LineNr&#34;&gt;76 &lt;/span&gt;p_trans = polyfit(Y_linear, RSS_linear, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Linear regression&lt;/span&gt;&#xA;&lt;span id=&#34;L77&#34; class=&#34;LineNr&#34;&gt;77 &lt;/span&gt;u_tau_RSS = &lt;span class=&#34;Statement&#34;&gt;sqrt&lt;/span&gt;(p_trans(&lt;span class=&#34;Constant&#34;&gt;2&lt;/span&gt;))&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;      &lt;span class=&#34;Comment&#34;&gt;% Friction velocity from RSS&lt;/span&gt;&#xA;&lt;span id=&#34;L78&#34; class=&#34;LineNr&#34;&gt;78 &lt;/span&gt;disp(&lt;span class=&#34;Identifier&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;Constant&#34;&gt;&#39;u_tau from RSS linear depth profile: &#39;&lt;/span&gt;, num2str(u_tau_RSS)&lt;span class=&#34;Identifier&#34;&gt;]&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L79&#34; class=&#34;LineNr&#34;&gt;79 &lt;/span&gt;&#xA;&lt;span id=&#34;L80&#34; class=&#34;LineNr&#34;&gt;80 &lt;/span&gt;&lt;span class=&#34;Comment&#34;&gt;% Add the linear fit to the plot&lt;/span&gt;&#xA;&lt;span id=&#34;L81&#34; class=&#34;LineNr&#34;&gt;81 &lt;/span&gt;p = polyfit(RSS_linear, Y_linear, &lt;span class=&#34;Constant&#34;&gt;1&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;span id=&#34;L82&#34; class=&#34;LineNr&#34;&gt;82 &lt;/span&gt;plot(RSS_linear, polyval(p, RSS_linear), &lt;span class=&#34;Constant&#34;&gt;&#39;r--&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;LineWidth&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;1.5&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Linear fit&lt;/span&gt;&#xA;&lt;span id=&#34;L83&#34; class=&#34;LineNr&#34;&gt;83 &lt;/span&gt;set(gca, &lt;span class=&#34;Constant&#34;&gt;&#39;FontSize&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;10&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;Comment&#34;&gt;% Adjust tick label size&lt;/span&gt;&#xA;&lt;span id=&#34;L84&#34; class=&#34;LineNr&#34;&gt;84 &lt;/span&gt;legend(&lt;span class=&#34;Constant&#34;&gt;&#39;Data&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;RSS linear fit&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Location&#39;&lt;/span&gt;, &lt;span class=&#34;Constant&#34;&gt;&#39;Best&#39;&lt;/span&gt;)&lt;span class=&#34;Special&#34;&gt;;&lt;/span&gt;&#xA;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;&#xA;&lt;!-- vim: set foldmethod=manual : --&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/docs/page-two/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/page-two/</guid>
      <description></description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/GPT-conversations/firmware-bootloader-MBR/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/GPT-conversations/firmware-bootloader-MBR/</guid>
      <description>&lt;h1 id=&#34;q-by-user&#34;&gt;&#xA;  Q by user&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#q-by-user&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;how to debug a toy boot-loader using qemu and gdb?&lt;/p&gt;&#xA;&lt;h1 id=&#34;a-by-gpt&#34;&gt;&#xA;  A by GPT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#a-by-gpt&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;Debugging a toy bootloader using QEMU and GDB involves a few steps to set up your environment and then run your bootloader under emulation with debugging enabled. Here’s a step-by-step guide on how to do it:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/GPT-conversations/hilbert-transform/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/GPT-conversations/hilbert-transform/</guid>
      <description>&lt;h1 id=&#34;q-by-user&#34;&gt;&#xA;  Q by user&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#q-by-user&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;explain why this code implement hilbert transform in math sense:&lt;/p&gt;&#xA;&lt;p&gt;I had a look at your code, made a couple edits, and compared it to the scipy and MATLAB Hilbert transforms. The function hilbert_from_scratch returns a complex sequence; the real components are the original signal and the complex components are the Hilbert transform. If you want just the Hilbert Transform, use np.imag on the returned array.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/GPT-conversations/implicit-vs-explicit-scheme/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/GPT-conversations/implicit-vs-explicit-scheme/</guid>
      <description>&lt;h1 id=&#34;q&#34;&gt;&#xA;  Q&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#q&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;explain implicit vs explicit scheme in pde and show examples&lt;/p&gt;&#xA;&lt;h1 id=&#34;a&#34;&gt;&#xA;  A&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#a&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h3 id=&#34;implicit-vs-explicit-schemes-in-partial-differential-equations-pdes&#34;&gt;&#xA;  Implicit vs. Explicit Schemes in Partial Differential Equations (PDEs)&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#implicit-vs-explicit-schemes-in-partial-differential-equations-pdes&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;In numerical analysis, particularly when solving partial differential equations (PDEs), two common approaches are used: &lt;strong&gt;implicit&lt;/strong&gt; and &lt;strong&gt;explicit&lt;/strong&gt; schemes. These schemes are methods for approximating solutions to PDEs, especially when analytical solutions are difficult or impossible to obtain.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/GPT-conversations/minimal-bootloader/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/GPT-conversations/minimal-bootloader/</guid>
      <description>&lt;h1 id=&#34;q-by-user&#34;&gt;&#xA;  Q by user&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#q-by-user&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;why qemu always stuck at VNC server running on ::1:5900?&lt;/p&gt;&#xA;&lt;h1 id=&#34;a-by-gpt&#34;&gt;&#xA;  A by GPT&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#a-by-gpt&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;When QEMU appears to be stuck at the message &amp;ldquo;VNC server running on ::1:5900,&amp;rdquo; it typically indicates that QEMU is running and waiting for a VNC client to connect to the virtual machine&amp;rsquo;s graphical output. Here are a few steps you can take to troubleshoot and resolve this issue:&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/GPT-conversations/project-matrix-GPT/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/GPT-conversations/project-matrix-GPT/</guid>
      <description>&lt;h1 id=&#34;q-by-user&#34;&gt;&#xA;  Q by user&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#q-by-user&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;p&gt;explain math meaning, project a matrix A onto the POD modes in U is U^*AU, where * means conjugate transpose.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
