<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Open channel</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Open channel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 27 Feb 2024 19:42:29 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>K41</title>
      <link>http://localhost:1313/posts/K41/</link>
      <pubDate>Tue, 27 Feb 2024 19:42:29 +0800</pubDate>
      <guid>http://localhost:1313/posts/K41/</guid>
      <description> Symmetry in statistical sense # Scale invarient # Finite mean rate of dissipation # </description>
    </item>
    <item>
      <title>Spectrum Analysis</title>
      <link>http://localhost:1313/posts/spectrum-analysis/</link>
      <pubDate>Thu, 01 Feb 2024 11:44:42 +0800</pubDate>
      <guid>http://localhost:1313/posts/spectrum-analysis/</guid>
      <description>写在前面 # 手册一般分为操作手册和原理手册，一般将前者称为指南，后者对应地称为指北。教科书往往兼顾两者，但是更加偏向原理讲解，绕了一大圈才道出问题的解决方法。在互联网论坛中存在一类“TL;DR”文化，即文本“Too long; Don&amp;rsquo;t read”，因此发帖人往往将操作讲解放在开头方便浏览者迅速找到问题的解决办法。&#xA;时间序列谱分析可以很复杂，先数学后物理再编程；也可以很简单，五六行代码便得到结果。本节是TL;DR的版本。&#xA;rng default % Sample rate 1000Hz Fs = 1000; t = 0:1/Fs:1; % A signal with 200Hz cosine and 100Hz sine and noise x = cos(2*pi*t*200) + sin(2*pi*t*100) + randn(size(t)); [pxx, f] = pwelch(x, [], [], [], Fs); plot(f, 10*log10(pxx)) xlabel(&amp;#39;Frequency (Hz)&amp;#39;) ylanel(&amp;#39;PSD (dB/Hz)&amp;#39;) legend(&amp;#39;Pxx by welch&amp;#39;) 随机过程 # 定义 # 流场分析采用雷诺分解瞬时流速$u(t)$为时均流速$U=\left\langle u\right\rangle$和脉动流速$u&#39;(t)$，即 $$u(t)=\left\langle u \right\rangle+u&#39;(t).</description>
    </item>
    <item>
      <title>Vim Plugin</title>
      <link>http://localhost:1313/posts/vim-plugin/</link>
      <pubDate>Tue, 24 Oct 2023 22:12:06 +0800</pubDate>
      <guid>http://localhost:1313/posts/vim-plugin/</guid>
      <description>Source: create a full plugin Source: writing vim plugin :help write-plugin file structure # See leanr vim script the hard way ch42.</description>
    </item>
    <item>
      <title>Pre and Notes</title>
      <link>http://localhost:1313/posts/20231021-pre_and_notes/</link>
      <pubDate>Sat, 21 Oct 2023 00:20:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/20231021-pre_and_notes/</guid>
      <description>谱分析 # See slide: 谱分析.&#xA;对于随机实信号 ：&#xA;平均功率 与功率谱密度 的关系&#xA;功率谱密度 与相关函数 的关系:</description>
    </item>
    <item>
      <title>二阶矩过程</title>
      <link>http://localhost:1313/posts/20231008-%E4%BA%8C%E9%98%B6%E7%9F%A9%E8%BF%87%E7%A8%8B/</link>
      <pubDate>Sun, 08 Oct 2023 17:07:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/20231008-%E4%BA%8C%E9%98%B6%E7%9F%A9%E8%BF%87%E7%A8%8B/</guid>
      <description>若随机过程 是一个复或实值随机过程，若对任意的，满足，则称随机过程是二阶矩过程。</description>
    </item>
    <item>
      <title>datapath</title>
      <link>http://localhost:1313/posts/data-path/</link>
      <pubDate>Wed, 21 Jun 2023 00:29:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/data-path/</guid>
      <description>single-cycle datapath # processor::datapath&#xA;Figure 1: Instructions being executed using the single-cycle datapath&#xA;⭐pipeline registers # The registers must be wide enough to store all the data corresponding to the lines that go through them.</description>
    </item>
    <item>
      <title>data hazard</title>
      <link>http://localhost:1313/posts/data-hazard/</link>
      <pubDate>Tue, 20 Jun 2023 23:35:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/data-hazard/</guid>
      <description>Figure 1: The datapath modified to resolve hazards via forwarding.&#xA;two pairs of hazard conditions # 1a. EX/MEM.RegisterRd =ID/EX.RegisterRs1 1b.</description>
    </item>
    <item>
      <title>二进制分析</title>
      <link>http://localhost:1313/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90/</link>
      <pubDate>Mon, 19 Jun 2023 18:12:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/%E4%BA%8C%E8%BF%9B%E5%88%B6%E5%88%86%E6%9E%90/</guid>
      <description> 对于二进制文件，使用 hd，hexdump 或者 xxd 使其以十六进制显示，使用 bvi，hexedit 或者 biew 来进行二进制编辑。 对于二进制文件，使用 hd，hexdump 或者 xxd 使其以十六进制显示，使用 bvi，hexedit 或者 biew 来进行二进制编辑。 同样对于二进制文件，strings（包括 grep 等工具）可以帮助在二进制文件中查找特定比特。 制作二进制差分文件（Delta 压缩），使用 xdelta3。 了解 strace 和 ltrace。这俩工具在你的程序运行失败、挂起甚至崩溃，而你却不知道为什么或你想对性能有个总体的认识的时候是非常有用的。注意 profile 参数（-c）和附加到一个运行的进程参数 （-p）。 了解使用 ldd 来检查共享库。但是永远不要在不信任的文件上运行。 了解如何运用 gdb 连接到一个运行着的进程并获取它的堆栈轨迹。 </description>
    </item>
    <item>
      <title>xargs</title>
      <link>http://localhost:1313/posts/xargs/</link>
      <pubDate>Mon, 19 Jun 2023 17:26:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/xargs/</guid>
      <description>使用 xargs （ 或 parallel）。他们非常给力。注意到你可以控制每行参数个数（-L）和最大并行数（-P）。如果你不确定它们是否会按你想的那样工作，先使用 xargs echo 查看一下。此外，使用 -I{} 会很方便。例如：&#xA;find . -name &amp;#39;*.py&amp;#39; | xargs grep some_function cat hosts | xargs -I{} ssh root@{} hostname </description>
    </item>
    <item>
      <title>Readline</title>
      <link>http://localhost:1313/posts/Readline/</link>
      <pubDate>Mon, 19 Jun 2023 17:23:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/Readline/</guid>
      <description>Readline # 你喜欢的话，可以执行 set -o vi 来使用 vi 风格的快捷键，而执行 set -o emacs 可以把它改回来。 为了便于编辑长命令，在设置你的默认编辑器后（例如 export EDITOR=vim），ctrl-x ctrl-e 会打开一个编辑器来编辑当前输入的命令。在 vi 风格下快捷键则是 escape-v。 键入 history 查看命令行历史记录，再用 !</description>
    </item>
    <item>
      <title>The art of cmd line</title>
      <link>http://localhost:1313/posts/The-art-of-cmd-line/</link>
      <pubDate>Mon, 19 Jun 2023 16:52:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/The-art-of-cmd-line/</guid>
      <description>Readline # xargs # 二进制分析 # Miscellaneous # 使用 nohup 或 disown 使一个后台进程持续运行。&#xA;在 Bash 脚本中，使用 set -x 去调试输出（或者使用它的变体 set -v，它会记录原始输入，包括多余的参数和注释）。尽可能地使用严格模式：使用 set -e 令脚本在发生错误时退出而不是继续运行；使用 set -u 来检查是否使用了未赋值的变量；试试 set -o pipefail，它可以监测管道中的错误。当牵扯到很多脚本时，使用 trap 来检测 ERR 和 EXIT。一个好的习惯是在脚本文件开头这样写，这会使它能够检测一些错误，并在错误发生时中断程序并输出信息：</description>
    </item>
    <item>
      <title>D latch</title>
      <link>http://localhost:1313/posts/D-latch/</link>
      <pubDate>Wed, 14 Jun 2023 14:07:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/D-latch/</guid>
      <description>The inputs are the data value to be stored (called D ) and a clock signal (called C ) that indicates when the latch should read the value on the D input and store it.</description>
    </item>
    <item>
      <title>register file</title>
      <link>http://localhost:1313/posts/register-file/</link>
      <pubDate>Wed, 14 Jun 2023 12:50:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/register-file/</guid>
      <description>Definition # register file: A state element that consists of a set of registers that can be read and written by supplying a register number to be accessed.</description>
    </item>
    <item>
      <title>processor</title>
      <link>http://localhost:1313/posts/processor/</link>
      <pubDate>Wed, 14 Jun 2023 12:46:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/processor/</guid>
      <description>Sources:&#xA;CDA 3101 Computer Organization II registers # The processor’s 32 general-purpose registers are stored in a structure called a register file.</description>
    </item>
    <item>
      <title>org-roam and hugo</title>
      <link>http://localhost:1313/posts/20230614-org_roam_and_hugo/</link>
      <pubDate>Wed, 14 Jun 2023 00:52:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/20230614-org_roam_and_hugo/</guid>
      <description>export latex snippet in svg # #+options: tex:dvisvgm ... text ... \[ a + b \] ... text ... Note: default output markdown use &amp;lt;img&amp;gt; tag to show math equation svg, something like:</description>
    </item>
    <item>
      <title>archive lib file</title>
      <link>http://localhost:1313/posts/archive-lib-file/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/archive-lib-file/</guid>
      <description>View archive lib file # Run the following command to list the contents of the archive:&#xA;ar tv &amp;lt;filename&amp;gt;.a This will print a list of all the files contained in the archive along with their metadata (e.</description>
    </item>
    <item>
      <title>bss vs COMMON</title>
      <link>http://localhost:1313/posts/bss-vs-COMMON/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/bss-vs-COMMON/</guid>
      <description>https://stackoverflow.com/questions/16835716/bss-vs-common-what-goes-where&#xA;COMMON is for uninitialized data objects that are not yet allocated. .bss: Uninitialized global C variables. Uninitialized variables do not have to occupy any actual disk space in the object file.</description>
    </item>
    <item>
      <title>dynamic linking</title>
      <link>http://localhost:1313/posts/dynamic-linking/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/dynamic-linking/</guid>
      <description>Dynamic linking is performed during the run time by placing the name of the shareable library in the executable image.</description>
    </item>
    <item>
      <title>ELF format</title>
      <link>http://localhost:1313/posts/ELF-format/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/ELF-format/</guid>
      <description>To check relocatable object file, use objdump.&#xA;The ELF header begins with a 16-byte sequence that describes the word size and byte ordering of the system that generated the file.</description>
    </item>
    <item>
      <title>foo</title>
      <link>http://localhost:1313/posts/20230613-foo/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/20230613-foo/</guid>
      <description>Pellentesque dapibus suscipit ligula. Donec posuere augue in quam. Etiam vel tortor sodales tellus ultricies commodo. Suspendisse potenti. Aenean in sem ac leo mollis blandit.</description>
    </item>
    <item>
      <title>IEEE754 float</title>
      <link>http://localhost:1313/posts/IEEE754-float/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/IEEE754-float/</guid>
      <description>tool:&#xA;IEEE-754 Floating Point Converter&#xA;gdb: see gdb print format.&#xA;p/t (float)decimal number ==&amp;gt; binary IEEE754 format(32 bits) p/tx (float)decimal number ==&amp;gt; hex IEEE754 format(32 bits) p 0b0100111 or 0B0100111 ==&amp;gt; binary to deciaml course: IEEE 754</description>
    </item>
    <item>
      <title>loader</title>
      <link>http://localhost:1313/posts/loader/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/loader/</guid>
      <description>Difference between Linker and Loader - GeeksforGeeks</description>
    </item>
    <item>
      <title>objdump</title>
      <link>http://localhost:1313/posts/objdump/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/objdump/</guid>
      <description>objdump -h &amp;lt;objectfile&amp;gt; to display the section headers of the object file. This will show you the names, sizes, and memory addresses of each section in the file.</description>
    </item>
    <item>
      <title>object files</title>
      <link>http://localhost:1313/posts/object-files/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/object-files/</guid>
      <description>Object files come in three forms:&#xA;Relocatable object file. Contains binary code and data in a form that can be combined with other relocatable object files at compile time to create an executable object file.</description>
    </item>
    <item>
      <title>org-roam workflow</title>
      <link>http://localhost:1313/posts/20230608114303-org_roam_workflow/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/20230608114303-org_roam_workflow/</guid>
      <description>source:&#xA;https://jethrokuan.github.io/org-roam-guide/ https://www.orgroam.com/manual.html#Getting-Started https://www.orgroam.com/ https://develop.spacemacs.org/layers/%2Bemacs/org/README.html#org-roam-support http://lgmoneda.github.io/2023/04/08/semantic-search-for-org-roam.html https://www.karsdorp.io/posts/dotemacs/ Features: # A pomodoro method integration via org-pomodoro # Presentation mode via org-present # left/right for movement C-c C-= for large txt C-c C&amp;ndash; for small text C-c C-q for quit (which will return you back to vanilla org-mode) C-c &amp;lt; and C-c &amp;gt; to jump to first/last slide C-c C-r for buffer read-only C-c C-w for buffer read/write C-c C-1 for one big page showing all slides Insertion of images via org-download # org-download-clipboard: org-download-image + Url in clipboard org-download-screenshot: Capture screenshot and insert the resulting file.</description>
    </item>
    <item>
      <title>resovle symbols</title>
      <link>http://localhost:1313/posts/resovle-symbols/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/resovle-symbols/</guid>
      <description>Functions and initialized global variables get strong symbols.&#xA;Uninitialized global variables get weak symbols.&#xA;Rule 1: Multiple strong symbols are not allowed.</description>
    </item>
    <item>
      <title>static linking</title>
      <link>http://localhost:1313/posts/static-linking/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/static-linking/</guid>
      <description>Anon ELF object file format&#xA;static linking # static linking is the type of linking which is performed before execution, in static linking the linker takes a bunch of relocatable object file and args and generate fully object file which can be run.</description>
    </item>
    <item>
      <title>symbols and symbol tables</title>
      <link>http://localhost:1313/posts/symbols-and-symbol-tables/</link>
      <pubDate>Tue, 13 Jun 2023 23:15:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/symbols-and-symbol-tables/</guid>
      <description>Refs:&#xA;https://www.youtube.com/watch?v=Dd3DWRpqI40 http://www.linker-aliens.org/blogs/ali/entry/inside_elf_symbol_tables/ In the context of a linker, there are three different kinds of symbols:&#xA;Global symbols that are defined by module m and that can be referenced by other modules.</description>
    </item>
    <item>
      <title>N站站衫设计ideas</title>
      <link>http://localhost:1313/posts/N-logo/</link>
      <pubDate>Fri, 26 May 2023 19:47:48 +0800</pubDate>
      <guid>http://localhost:1313/posts/N-logo/</guid>
      <description>设计要求&#xA;以 NexusHD、NHD 或 N 等相关文字为关键字，简约大方、健康向上，突出站点的特色；&#xA;可以选择短袖 T 恤、Polo 衫、卫衣等常用款式，请在设计方案中注明，衣服底色可以不选择白色；&#xA;考虑到印制的方便、可靠性，尽量避免全身式的图案印制。若设计效果出色本条限制可放宽；&#xA;设计图案中可以包含或不包含数字 15 这一元素，不必让数字限制住大家的发挥，希望优秀的设计放在每一年都是优秀的~；&#xA;可参考以前的设计方案： 2代设计方案 | 3代设计方案 | 4代设计方案 | 5代设计方案 | 6代设计方案 | 7代设计方案 | 8代设计方案 | 9代设计方案 | 10代设计方案 | 11代设计方案 | 12代（CC98 联名款）设计方案 | 13代设计方案 | 14代设计方案</description>
    </item>
    <item>
      <title>春天下午我总感到悲伤</title>
      <link>http://localhost:1313/posts/nonsense/</link>
      <pubDate>Mon, 22 May 2023 13:17:37 +0800</pubDate>
      <guid>http://localhost:1313/posts/nonsense/</guid>
      <description>春天下午，天气好得人心慌，做什么或不做什么都是虚度。&#xA;白昼还没长到足以浪费，而黄昏又迟迟不结束。&#xA;站在玉兰和山茶之间，&#xA;玉兰像白鸟的羽翼、怒放的雪，茶花在太阳下闪着光辉。&#xA;人迷恋声色犬马，只是为了忘记时间在流逝……&#xA;人用意义来对抗死，&#xA;而春天没有意义。&#xA;春天下午我总感到悲伤。</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Mon, 10 Apr 2023 12:28:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>😀Hello world!</description>
    </item>
  </channel>
</rss>
